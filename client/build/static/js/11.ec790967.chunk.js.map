{"version":3,"sources":["components/adminPanel/AdminPanelComponents/adminArticlesSpace/Forms/ArticleFilePondForm.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/Forms/ArticleBlocksForm.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/Forms/ArticleBlockImageForm.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/ShowArticleDevelopingResults.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/Forms/ArticleBlockListItemsForm.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/Forms/ArticleBlocksTextAreasForm.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/UpdateLatestArticleData.jsx","components/adminPanel/AdminPanelComponents/adminArticlesSpace/UpdateLatestArticleDataContainer.jsx"],"names":["registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileEncode","FilePondPluginImageResize","ArticleFilePondForm","props","useState","files","setFiles","className","action","method","htmlFor","type","name","articles","length","defaultValue","_id","value","setOptions","stylePanelAspectRatio","imageResizeTargetWidth","imageResizeTargetHight","onupdatefiles","allowMultiple","maxFiles","labelIdle","loading","UpdateArticleData","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","rows","ArticleBlockImageForm","blocks","onChange","console","log","ShowArticleDevelopingResults","onChangeTextArea","ArticleMap","filter","article","currentArticleId","map","MainImg","articleImages","imgType","img","toString","key","articleName","articleDate","src","alt","descr","BlocksMap","block","BlockImages","blocksImages","image","blockImage","blockOwner","style","marginLeft","imgPositioning","marginRight","width","imgWidth","BlocksList","blocksLists","listItem","title","BlockTextArea","blocksTextAreas","area","id","text","textAlign","titlePosition","UpdateArticleBlockListItems","UpdateArticleBlockTextArea","UpdateLatestArticleData","addArticleBlock","addArticleBlockListItem","addArticleBlockTextArea","connect","state","allArticles","images","currentBlockId","setArticleId","setArticles","setArticlesMainImages","setArticleBlocks","setCurrentBlockId","setArticleBlocksImages","setArticleBlocksLists","setArticleBlocksTextAreas","request","useHttp","useEffect","a","articlesResponse","currentId","articlesImages","articlesBlocksresponse","articlesBlocksImages","articlesBlocksLists","articlesBlocksTextAreas","formData","owner","getArticleBlocks","articleOwner"],"mappings":"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","file":"static/js/11.ec790967.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"../../../Admin.css\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\n\r\n// Register the plugins\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst ArticleFilePondForm = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  return (\r\n    <div className=\"filePondWorks wrapper\">\r\n      <form action=\"/api/articles/addPhoto\" method=\"POST\">\r\n        <h2 className=\"editImageDataTitle\">Add main article image</h2>\r\n        <div className=\"editImgData\">\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"descr\">Description: </label>\r\n            <input type=\"text\" name=\"descr\" />\r\n          </div>\r\n          {props.articles.length !== 0 ? (\r\n            <div className=\"editInput imgInput hideInput\">\r\n              <label htmlFor=\"owner\">Owner: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"owner\"\r\n                defaultValue={props.articles[props.articles.length - 1]._id}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"editFontStyle\">\r\n            <label htmlFor=\"type\">Type: </label>\r\n            <select name=\"type\">\r\n              <option value=\"articlePreview\">articlePreview</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"filePondArea\">\r\n          <FilePond\r\n            setOptions={{\r\n              stylePanelAspectRatio: 150 / 100,\r\n              imageResizeTargetWidth: 100,\r\n              imageResizeTargetHight: 150,\r\n            }}\r\n            files={files}\r\n            onupdatefiles={setFiles}\r\n            allowMultiple={false}\r\n            maxFiles={1}\r\n            name=\"img\"\r\n            labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n          />\r\n          <div className=\"buttonPage\">\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </div>\r\n        <div>{props.loading ? \"loading...\" : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleFilePondForm;\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport \"../../../Admin.css\";\r\n\r\nconst ArticleBlocksForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"wrapper\">\r\n      <h2 className=\"editImageDataTitle\">Article blocks part</h2>\r\n      <div className=\"editInput articleBlockTitle articleBlockMargin\">\r\n        <label htmlFor=\"title\">Title of the block: </label>\r\n        <Field placeholder=\"Block title\" name=\"title\" component=\"input\" />\r\n        <label htmlFor=\"titlePosition\">Position of the title: </label>\r\n        <div className=\"editFontStyle\">\r\n          <Field name=\"titlePosition\" component=\"select\">\r\n            <option>Left</option>\r\n            <option>Right</option>\r\n            <option>Center</option>\r\n          </Field>\r\n        </div>\r\n        <button>add</button>\r\n      </div>\r\n      <div className=\"editAboutProject\">\r\n        <Field\r\n          name=\"text\"\r\n          component=\"textarea\"\r\n          placeholder=\"Enter your text of the block\"\r\n          rows=\"10\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UpdateArticleData = reduxForm({ form: \"updateArticleData\" })(ArticleBlocksForm);\r\n\r\nexport default UpdateArticleData;\r\n","import React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"../../../Admin.css\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\n\r\n// Register the plugins\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst ArticleBlockImageForm = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  const setValue = () => {\r\n    console.log();\r\n  };\r\n  return (\r\n    <div className=\"filePondWorks wrapper\">\r\n      <form action=\"/api/articles/block/addPhoto\" method=\"POST\">\r\n        <h2 className=\"editImageDataTitle\">Add image for block if necessary</h2>\r\n        <div className=\"editImgData\">\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"descr\">Description: </label>\r\n            <input type=\"text\" name=\"descr\" />\r\n          </div>\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"imgWidth\">Width: </label>\r\n            <input type=\"text\" name=\"imgWidth\" />\r\n          </div>\r\n          <div className=\"editFontStyle\">\r\n            <label htmlFor=\"imgPositioning\">Position: </label>\r\n            <select name=\"imgPositioning\">\r\n              <option value=\"auto\">auto</option>\r\n              <option value=\"unset\">left</option>\r\n            </select>\r\n          </div>\r\n          {props.articles.length !== 0 ? (\r\n            <div className=\"editInput imgInput hideInput\">\r\n              <label htmlFor=\"owner\">Owner: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"articleOwner\"\r\n                defaultValue={props.articles[props.articles.length - 1]._id}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {props.blocks.length !== 0 ? (\r\n            <div className=\"editInput imgInput hideInput\">\r\n              <label htmlFor=\"owner\">Owner: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"blockOwner\"\r\n                value={props.blocks[props.blocks.length - 1]._id}\r\n                onChange={setValue}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"editFontStyle\">\r\n            <label htmlFor=\"type\">Type: </label>\r\n            <select name=\"type\">\r\n              <option value=\"articleBlock\">articleBlock</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"filePondArea\">\r\n          <FilePond\r\n            setOptions={{\r\n              stylePanelAspectRatio: 150 / 100,\r\n              imageResizeTargetWidth: 100,\r\n              imageResizeTargetHight: 150,\r\n            }}\r\n            files={files}\r\n            onupdatefiles={setFiles}\r\n            allowMultiple={false}\r\n            maxFiles={1}\r\n            name=\"img\"\r\n            labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n          />\r\n          <div className=\"buttonPage\">\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </div>\r\n        <div>{props.loading ? \"loading...\" : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleBlockImageForm;\r\n","import React from \"react\";\r\nimport \"../../../BlogPage/BlogPage.css\";\r\n\r\nconst ShowArticleDevelopingResults = (props) => {\r\n  const onChangeTextArea = () => {\r\n    console.log();\r\n  };\r\n  const ArticleMap = props.articles\r\n    .filter((article) => props.currentArticleId === article._id)\r\n    .map((article) => {\r\n      const MainImg =\r\n        props.articleImages.length !== 0 &&\r\n        `data:${\r\n          props.articleImages[0].imgType\r\n        };charset=utf-8;base64,${props.articleImages[0].img.toString(\"base64\")}`;\r\n      return (\r\n        <div className=\"blogArticle\" key={article._id}>\r\n          <h1>{article.articleName}</h1>\r\n          <hr />\r\n          <div className=\"dateViews\">\r\n            <p className=\"date\">By Amir Aimurzayev on {article.articleDate}</p>\r\n          </div>\r\n          {props.articleImages.length !== 0 && (\r\n            <img src={MainImg} alt={props.articleImages[0].descr} />\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const BlocksMap = props.blocks.map((block) => {\r\n    const BlockImages = props.blocksImages.map((image) => {\r\n      const blockImage = `data:${image.imgType};charset=utf-8;base64,${image.img.toString(\r\n        \"base64\"\r\n      )}`;\r\n      return (\r\n        <div key={image._id} className=\"articleBlock\">\r\n          {image.blockOwner === block._id && (\r\n            <img\r\n              style={{\r\n                marginLeft: image.imgPositioning,\r\n                marginRight: image.imgPositioning,\r\n                width: image.imgWidth,\r\n              }}\r\n              src={blockImage}\r\n              alt={image.descr}\r\n            />\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n    const BlocksList = props.blocksLists.map((listItem) => {\r\n      return (\r\n        <div key={listItem._id}>\r\n          {listItem.blockOwner === block._id && <li>{listItem.title}</li>}\r\n        </div>\r\n      );\r\n    });\r\n    const BlockTextArea = props.blocksTextAreas.map((area) => {\r\n      return (\r\n        <div key={area._id}>\r\n          {area.blockOwner === block._id && (\r\n            <textarea\r\n              className=\"blockTextArea\"\r\n              name=\"blockTextArea\"\r\n              id=\"\"\r\n              rows=\"12\"\r\n              value={area.text}\r\n              onChange={onChangeTextArea}\r\n            ></textarea>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div key={block._id} className=\"articleBlock\">\r\n        {BlockImages}\r\n        {block.title && <h3 style={{ textAlign: block.titlePosition }}>{block.title}</h3>}\r\n        <ul className=\"articleList\">{BlocksList}</ul>\r\n        {block.text && <p>{block.text}</p>}\r\n        {BlockTextArea}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"articleReadMore wrapper\">\r\n      <div className=\"blogOverlay\">\r\n        {ArticleMap}\r\n        <div className=\"blogArticle\">{BlocksMap}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowArticleDevelopingResults;\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport \"../../../Admin.css\"\r\n\r\nconst ArticleBlockListItemsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"articleBlockAdditionalData wrapper\">\r\n      <h2 className=\"editImageDataTitle\">Add block list items</h2>\r\n      <div className=\"editInput articleBlockTitle articleBlockMargin\">\r\n        <label htmlFor=\"title\">Title of the block: </label>\r\n        <Field placeholder=\"Block title\" name=\"title\" component=\"input\" />\r\n        <button>add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UpdateArticleBlockListItems = reduxForm({ form: \"updateArticleBlockListItems\" })(\r\n  ArticleBlockListItemsForm\r\n);\r\n\r\nexport default UpdateArticleBlockListItems;\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport \"../../../Admin.css\";\r\n\r\nconst ArticleBlocksTextAreasForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"articleBlockAdditionalData wrapper\">\r\n      <h2 className=\"editImageDataTitle\">Add block list items</h2>\r\n      <div className=\"editAboutProject articleBlockTitle articleBlockMargin\">\r\n        <label htmlFor=\"text\">Title of the block: </label>\r\n        <Field\r\n          name=\"text\"\r\n          component=\"textarea\"\r\n          placeholder=\"Enter your text of the block\"\r\n          rows=\"10\"\r\n        />\r\n        <button>add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UpdateArticleBlockTextArea = reduxForm({ form: \"updateArticleBlockTextArea\" })(\r\n  ArticleBlocksTextAreasForm\r\n);\r\n\r\nexport default UpdateArticleBlockTextArea;\r\n","import React from \"react\";\r\nimport ArticleFilePondForm from \"./Forms/ArticleFilePondForm\";\r\nimport UpdateArticleData from \"./Forms/ArticleBlocksForm\";\r\nimport ArticleBlockImageForm from \"./Forms/ArticleBlockImageForm\";\r\nimport ShowArticleDevelopingResults from \"./ShowArticleDevelopingResults\";\r\nimport UpdateArticleBlockListItems from \"./Forms/ArticleBlockListItemsForm\";\r\nimport UpdateArticleBlockTextArea from \"./Forms/ArticleBlocksTextAreasForm\";\r\n\r\nconst UpdateLatestArticleData = (props) => {\r\n  return (\r\n    <div className=\"UpdateLatestArticleData\">\r\n      <ArticleFilePondForm articles={props.articles} />\r\n      <ShowArticleDevelopingResults\r\n        currentArticleId={props.currentArticleId}\r\n        articles={props.articles}\r\n        articleImages={props.articleImages}\r\n        blocks={props.blocks}\r\n        blocksImages={props.blocksImages}\r\n        blocksLists={props.blocksLists}\r\n        blocksTextAreas={props.blocksTextAreas}\r\n      />\r\n      <UpdateArticleData onSubmit={props.addArticleBlock} />\r\n      <UpdateArticleBlockListItems onSubmit={props.addArticleBlockListItem} />\r\n      <UpdateArticleBlockTextArea onSubmit={props.addArticleBlockTextArea} />\r\n      <ArticleBlockImageForm articles={props.articles} blocks={props.blocks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateLatestArticleData;\r\n","import React, { useEffect } from \"react\";\r\nimport UpdateLatestArticleData from \"./UpdateLatestArticleData\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\nimport {\r\n  setArticleId,\r\n  setArticles,\r\n  setArticlesMainImages,\r\n  setArticleBlocks,\r\n  setCurrentBlockId,\r\n  setArticleBlocksImages,\r\n  setArticleBlocksLists,\r\n  setArticleBlocksTextAreas,\r\n} from \"../../../../Redux/ArticlesReducer\";\r\n\r\nconst UpdateLatestArticleDataContainer = (props) => {\r\n  const { request } = useHttp();\r\n  useEffect(() => {\r\n    const articles = async () => {\r\n      const articlesResponse = await request(\"/api/articles\", \"GET\", null);\r\n      props.setArticles(articlesResponse);\r\n      if (articlesResponse.length !== null) {\r\n        const currentId = articlesResponse[articlesResponse.length - 1]._id;\r\n        props.setArticleId(currentId);\r\n      }\r\n      if (props.currentArticleId !== null) {\r\n        const articlesImages = await request(\r\n          `/api/articles/getArticleMainImages/${props.currentArticleId}`,\r\n          \"GET\",\r\n          null\r\n        );\r\n        props.setArticlesMainImages(articlesImages);\r\n        const articlesBlocksresponse = await request(\r\n          `/api/articles/getArticleBlockData/${props.currentArticleId}`,\r\n          \"GET\",\r\n          null\r\n        );\r\n        const currentBlockId = articlesBlocksresponse[articlesBlocksresponse.length - 1]._id;\r\n        props.setCurrentBlockId(currentBlockId);\r\n        props.setArticleBlocks(articlesBlocksresponse);\r\n        const articlesBlocksImages = await request(\r\n          `/api/articles/getArticleBlockImages/${props.currentArticleId}`,\r\n          \"GET\",\r\n          null\r\n        );\r\n        props.setArticleBlocksImages(articlesBlocksImages);\r\n        const articlesBlocksLists = await request(\r\n          `/api/articles/getArticleBlockLists/${props.currentArticleId}`,\r\n          \"GET\",\r\n          null\r\n        );\r\n        props.setArticleBlocksLists(articlesBlocksLists);\r\n        const articlesBlocksTextAreas = await request(\r\n          `/api/articles/getArticleBlockTextAreas/${props.currentArticleId}`,\r\n          \"GET\",\r\n          null\r\n        );\r\n        props.setArticleBlocksTextAreas(articlesBlocksTextAreas);\r\n      }\r\n    };\r\n    articles();\r\n  }, [props.currentArticleId]);\r\n\r\n  const addArticleBlock = async (formData) => {\r\n    await request(\"/api/articles/createArticleBlock\", \"POST\", {\r\n      ...formData,\r\n      owner: props.currentArticleId,\r\n    });\r\n    const getArticleBlocks = await request(\r\n      `/api/articles/getArticleBlockData/${props.currentArticleId}`,\r\n      \"GET\",\r\n      null\r\n    );\r\n    const currentBlockId = getArticleBlocks[getArticleBlocks.length - 1]._id;\r\n    props.setCurrentBlockId(currentBlockId);\r\n    props.setArticleBlocks(getArticleBlocks);\r\n    formData.title = null;\r\n    formData.text = null;\r\n  };\r\n\r\n  const addArticleBlockListItem = async (formData) => {\r\n    await request(\"/api/articles/createArticleBlockList\", \"POST\", {\r\n      ...formData,\r\n      articleOwner: props.currentArticleId,\r\n      blockOwner: props.currentBlockId,\r\n    });\r\n    const articlesBlocksLists = await request(\r\n      `/api/articles/getArticleBlockLists/${props.currentArticleId}`,\r\n      \"GET\",\r\n      null\r\n    );\r\n    props.setArticleBlocksLists(articlesBlocksLists);\r\n    const articlesBlocksTextAreas = await request(\r\n      `/api/articles/getArticleBlockTextAreas/${props.currentArticleId}`,\r\n      \"GET\",\r\n      null\r\n    );\r\n    props.setArticleBlocksTextAreas(articlesBlocksTextAreas);\r\n    formData.title = null;\r\n  };\r\n\r\n  const addArticleBlockTextArea = async (formData) => {\r\n    await request(\"/api/articles/createArticleBlockTextArea\", \"POST\", {\r\n      ...formData,\r\n      articleOwner: props.currentArticleId,\r\n      blockOwner: props.currentBlockId,\r\n    });\r\n    const articlesBlocksTextAreas = await request(\r\n      `/api/articles/getArticleBlockTextAreas/${props.currentArticleId}`,\r\n      \"GET\",\r\n      null\r\n    );\r\n    props.setArticleBlocksTextAreas(articlesBlocksTextAreas);\r\n    formData.text = null;\r\n  };\r\n  return (\r\n    <div>\r\n      <UpdateLatestArticleData\r\n        currentArticleId={props.currentArticleId}\r\n        articles={props.allArticles}\r\n        articleImages={props.articleImages}\r\n        blocks={props.blocks}\r\n        blocksImages={props.blocksImages}\r\n        blocksLists={props.blocksLists}\r\n        blocksTextAreas={props.blocksTextAreas}\r\n        addArticleBlock={addArticleBlock}\r\n        addArticleBlockListItem={addArticleBlockListItem}\r\n        addArticleBlockTextArea={addArticleBlockTextArea}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    allArticles: state.articles.articles,\r\n    currentArticleId: state.articles.currentArticleId,\r\n    articleImages: state.articles.images,\r\n    blocks: state.articles.blocks,\r\n    currentBlockId: state.articles.currentBlockId,\r\n    blocksImages: state.articles.blocksImages,\r\n    blocksLists: state.articles.blocksLists,\r\n    blocksTextAreas: state.articles.blocksTextAreas,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setArticleId,\r\n  setArticles,\r\n  setArticlesMainImages,\r\n  setArticleBlocks,\r\n  setCurrentBlockId,\r\n  setArticleBlocksImages,\r\n  setArticleBlocksLists,\r\n  setArticleBlocksTextAreas,\r\n})(UpdateLatestArticleDataContainer);\r\n"],"sourceRoot":""}