{"version":3,"sources":["Redux/img/adminPanel/adminPanel.png","components/adminPanel/AdminPanelComponents/LoginForm.jsx","components/adminPanel/AdminPanel.jsx","components/adminPanel/AdminPanelComponents/AdminPanelContainer.js"],"names":["module","exports","SignInReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","Field","placeholder","name","component","type","AdminPanel","validation","to","src","adminPanelImg","loginHandler","error","connect","state","admin","login","setError","console","log","request","useHttp","registerHandler","formData","a","email","password","data","token","userId"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,wC,+JCiB5BC,EAFSC,YAAU,CAAEC,KAAM,UAAlBD,EAZN,SAACE,GACjB,OACE,0BAAMC,SAAUD,EAAME,aAAcC,UAAU,cAC5C,uCACA,kBAACC,EAAA,EAAD,CAAOC,YAAY,QAAQC,KAAK,QAAQC,UAAU,UAClD,uCACA,kBAACH,EAAA,EAAD,CAAOC,YAAY,WAAWC,KAAK,WAAWC,UAAU,QAAQC,KAAK,aACrE,+CCaSC,EAjBE,SAACT,GAChB,OACE,6BACGA,EAAMU,WACL,kBAAC,IAAD,CAAUC,GAAI,WAEd,yBAAKR,UAAU,kBACb,yBAAKS,IAAKC,MACV,qDACA,kBAAC,EAAD,CAAWZ,SAAUD,EAAMc,eAC3B,2BAAId,EAAMe,U,QC+BLC,uBAPS,SAACC,GACvB,MAAO,CACLP,WAAYO,EAAMC,MAAMR,WACxBK,MAAOE,EAAMC,MAAMH,SAIiB,CAAEI,UAAOC,cAAlCJ,EAzCW,SAAChB,GACzBqB,QAAQC,IAAItB,GADuB,IAE3BuB,EAAYC,cAAZD,QAEFE,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAEdJ,EAAQ,qBAAsB,OAAvB,eAAoCG,IAF7B,OAGpBA,EAASE,MAAQ,KACjBF,EAASG,SAAW,KAJA,uGAAH,sDAQff,EAAY,uCAAG,WAAOY,GAAP,eAAAC,EAAA,+EAEEJ,EAAQ,kBAAmB,OAApB,eAAiCG,IAF1C,OAEXI,EAFW,OAGjB9B,EAAMmB,MAAMW,EAAKC,MAAOD,EAAKE,QAC7BN,EAASE,MAAQ,KACjBF,EAASG,SAAW,KALH,yGAAH,sDAWlB,OACE,kBAAC,EAAD,CACEnB,WAAYV,EAAMU,WAClBK,MAAOf,EAAMe,MACbU,gBAAiBA,EACjBX,aAAcA","file":"static/js/7.bd24e8fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adminPanel.29dc86a4.png\";","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className=\"signInForm\">\r\n      <p>Username</p>\r\n      <Field placeholder=\"Login\" name=\"email\" component=\"input\" />\r\n      <p>Password</p>\r\n      <Field placeholder=\"Password\" name=\"password\" component=\"input\" type=\"password\" />\r\n      <button>Sign in</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SignInReduxForm = reduxForm({ form: \"signIn\" })(LoginForm);\r\n\r\nexport default SignInReduxForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Admin.css\";\r\nimport adminPanelImg from \"../../Redux/img/adminPanel/adminPanel.png\";\r\nimport LoginForm from \"./AdminPanelComponents/LoginForm\";\r\n\r\nlet AdminPanel = (props) => {\r\n  return (\r\n    <div>\r\n      {props.validation ? ( \r\n        <Redirect to={\"/admin\"} />\r\n      ) : (\r\n        <div className=\"wrapper signIn\">\r\n          <img src={adminPanelImg}  />\r\n          <h1>Sign in to AdminPanel</h1>\r\n          <LoginForm onSubmit={props.loginHandler} />\r\n          <p>{props.error}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../hooks/http.hook\";\r\nimport AdminPanel from \"../AdminPanel\";\r\nimport { login, setError } from \"../../../Redux/AdminReducer\";\r\n\r\nlet AdminPanelContainer = (props) => {\r\n  console.log(props)\r\n  const { request } = useHttp();\r\n\r\n  const registerHandler = async (formData) => {\r\n    try {\r\n      await request(\"/api/auth/register\", \"POST\", { ...formData });\r\n      formData.email = null;\r\n      formData.password = null;\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async (formData) => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...formData });\r\n      props.login(data.token, data.userId);\r\n      formData.email = null;\r\n      formData.password = null;\r\n    } catch (e) {}\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <AdminPanel\r\n      validation={props.validation}\r\n      error={props.error}\r\n      registerHandler={registerHandler}\r\n      loginHandler={loginHandler}\r\n    />\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    validation: state.admin.validation,\r\n    error: state.admin.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login, setError })(AdminPanelContainer);\r\n"],"sourceRoot":""}