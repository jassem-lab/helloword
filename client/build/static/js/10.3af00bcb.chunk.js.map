{"version":3,"sources":["components/BlogPage/BlogPageComponents/BlogPageElement.jsx","components/BlogPage/BlogPage.jsx","components/BlogPage/BlogPageContainer.js"],"names":["BlogPageElement","props","className","articleName","articleDate","likes","comments","BlogPageImages","articleSmallDescription","to","urlAdress","BlogPage","BlogPageElements","articles","map","article","images","filter","image","owner","_id","MainImg","length","imgType","img","toString","key","src","alt","descr","id","loading","Preloader","connect","state","menuOpened","admin","setArticles","setArticlesMainImages","useHttp","request","useEffect","a","articlesResponse","articlesReverse","reverse","articlesImages"],"mappings":"0LA0BeA,EAtBO,SAACC,GACrB,OACE,yBAAKC,UAAU,eACb,4BAAKD,EAAME,aACX,6BACA,yBAAKD,UAAU,aACb,uBAAGA,UAAU,QAAb,yBAA2CD,EAAMG,aACjD,qCACUH,EAAMI,MAAQJ,EAAMI,MAAQ,EADtC,cACoDJ,EAAMK,SAAWL,EAAMK,SAAW,IAGvFL,EAAMM,eACP,iCAAUN,EAAMO,yBAChB,yBAAKN,UAAU,6BACb,kBAAC,IAAD,CAASO,GAAI,YAAcR,EAAMS,WAC/B,iD,QC2BKC,EAzCA,SAACV,GACd,IAAIW,EAAmBX,EAAMY,SAASC,KAAI,SAACC,GACzC,IAAIR,EAAiBN,EAAMe,OACxBC,QAAO,SAACC,GAAD,OAAWA,EAAMC,QAAUJ,EAAQK,OAC1CN,KAAI,SAACI,GACJ,IAAMG,EACoB,IAAxBpB,EAAMe,OAAOM,QAAb,eACQJ,EAAMK,QADd,iCAC8CL,EAAMM,IAAIC,SAAS,WACnE,OAAO,yBAAKC,IAAKR,EAAME,IAAKO,IAAKN,EAASO,IAAKV,EAAMW,WAEzD,OACE,kBAAC,EAAD,CACEH,IAAKX,EAAQK,IACbU,GAAIf,EAAQK,IACZjB,YAAaY,EAAQZ,YACrBC,YAAaW,EAAQX,YACrBI,wBAAyBO,EAAQP,wBACjCE,UAAWK,EAAQL,UACnBJ,SAAUS,EAAQT,SAClBD,MAAOU,EAAQV,MACfE,eAAgBA,OAItB,OACE,6BACGN,EAAM8B,QACL,kBAACC,EAAA,EAAD,MAEA,yBAAK9B,UAAU,UACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eAAeU,Q,uBCD7BqB,uBARO,SAACC,GACrB,MAAO,CACLrB,SAAUqB,EAAMrB,SAASA,SACzBG,OAAQkB,EAAMrB,SAASG,OACvBmB,WAAYD,EAAME,MAAMD,cAIY,CAAEE,gBAAaC,2BAAxCL,EA9BS,SAAChC,GAAW,IAAD,EACJsC,cAArBR,EADyB,EACzBA,QAASS,EADgB,EAChBA,QAWjB,OAVAC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,sEACgBF,EAAQ,gBAAiB,MAAO,MADhD,cACTG,EADS,OAETC,EAAkBD,EAAiBE,UACzC5C,EAAMoC,YAAYO,GAHH,SAIcJ,EAAQ,qCAAsC,MAAO,MAJnE,OAITM,EAJS,OAKf7C,EAAMqC,sBAAsBQ,GALb,2CAAH,qDAOdjC,KACC,IAED,kBAAC,EAAD,CACEA,SAAUZ,EAAMY,SAChBG,OAAQf,EAAMe,OACde,QAASA,EACTI,WAAYlC,EAAMkC","file":"static/js/10.3af00bcb.chunk.js","sourcesContent":["import React from \"react\";\r\n// import img from \"../../../Redux/img/articles/article1/website-launch-checklist.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet BlogPageElement = (props) => {\r\n  return (\r\n    <div className=\"blogArticle\">\r\n      <h1>{props.articleName}</h1>\r\n      <hr />\r\n      <div className=\"dateViews\">\r\n        <p className=\"date\">By Amir Aimurzayev on {props.articleDate}</p>\r\n        <p>\r\n          likes: {props.likes ? props.likes : 0} comments: {props.comments ? props.comments : 0}\r\n        </p>\r\n      </div>\r\n      {props.BlogPageImages}\r\n      <article>{props.articleSmallDescription}</article>\r\n      <div className=\"buttonPage leftSideButton\">\r\n        <NavLink to={\"/article/\" + props.urlAdress}>\r\n          <button>Read more</button>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPageElement;\r\n","import React from \"react\";\r\nimport \"./BlogPage.css\";\r\nimport BlogPageElement from \"./BlogPageComponents/BlogPageElement\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nlet BlogPage = (props) => {\r\n  let BlogPageElements = props.articles.map((article) => {\r\n    let BlogPageImages = props.images\r\n      .filter((image) => image.owner === article._id)\r\n      .map((image) => {\r\n        const MainImg =\r\n          props.images.length !== 0 &&\r\n          `data:${image.imgType};charset=utf-8;base64,${image.img.toString(\"base64\")}`;\r\n        return <img key={image._id} src={MainImg} alt={image.descr} />;\r\n      });\r\n    return (\r\n      <BlogPageElement\r\n        key={article._id}\r\n        id={article._id}\r\n        articleName={article.articleName}\r\n        articleDate={article.articleDate}\r\n        articleSmallDescription={article.articleSmallDescription}\r\n        urlAdress={article.urlAdress}\r\n        comments={article.comments}\r\n        likes={article.likes}\r\n        BlogPageImages={BlogPageImages}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      {props.loading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div className=\"bgBlue\">\r\n          <div className=\"blogPaperOverlay\">\r\n            <div className=\"blogPaper wrapper\">\r\n              <div className=\"blogOverlay\">{BlogPageElements}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n","import React, { useEffect } from \"react\";\r\nimport BlogPage from \"./BlogPage\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { setArticles, setArticlesMainImages } from \"../../Redux/ArticlesReducer\";\r\n\r\nlet BlogPageContainer = (props) => {\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const articles = async () => {\r\n      const articlesResponse = await request(\"/api/articles\", \"GET\", null);\r\n      const articlesReverse = articlesResponse.reverse();\r\n      props.setArticles(articlesReverse);\r\n      const articlesImages = await request(\"/api/articles/getArticleMainImages\", \"GET\", null);\r\n      props.setArticlesMainImages(articlesImages);\r\n    };\r\n    articles();\r\n  }, []);\r\n  return (\r\n    <BlogPage\r\n      articles={props.articles}\r\n      images={props.images}\r\n      loading={loading}\r\n      menuOpened={props.menuOpened}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    articles: state.articles.articles,\r\n    images: state.articles.images,\r\n    menuOpened: state.admin.menuOpened,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setArticles, setArticlesMainImages })(BlogPageContainer);\r\n"],"sourceRoot":""}