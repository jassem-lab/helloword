{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\src\\\\components\\\\mainPage\\\\Components\\\\LatestWorks\\\\LatestWorksContainer.js\";\nimport React, { useEffect } from \"react\";\nimport LatestWorks from \"./LatestWorks\";\nimport { connect } from \"react-redux\";\nimport { useHttp } from \"../../../../hooks/http.hook\";\nimport { setWork, setImagesData } from \"../../../../Redux/WorksReducer\";\n\nlet LatestWorksContainer = props => {\n  const {\n    loading,\n    request\n  } = useHttp();\n  useEffect(() => {\n    const getLastWorkData = async () => {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      props.setWork(worksData);\n\n      if (worksData.length !== 0) {\n        const images = await request(\"/api/works/getMainPhotos/workPreview\", \"GET\", null);\n        props.setImagesData(images);\n      }\n    };\n\n    getLastWorkData();\n  }, []);\n  return /*#__PURE__*/React.createElement(LatestWorks, {\n    works: props.works,\n    images: props.images,\n    params: props.params,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    works: state.works.works,\n    images: state.works.images\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setWork,\n  setImagesData\n})(LatestWorksContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/mainPage/Components/LatestWorks/LatestWorksContainer.js"],"names":["React","useEffect","LatestWorks","connect","useHttp","setWork","setImagesData","LatestWorksContainer","props","loading","request","getLastWorkData","worksData","length","images","works","params","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,gCAAvC;;AAEA,IAAIC,oBAAoB,GAAIC,KAAD,IAAW;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBN,OAAO,EAApC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,eAAe,GAAG,YAAY;AAClC,YAAMC,SAAS,GAAG,MAAMF,OAAO,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAtB,CAA/B;AACAF,MAAAA,KAAK,CAACH,OAAN,CAAcO,SAAd;;AACA,UAAIA,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAMC,MAAM,GAAG,MAAMJ,OAAO,CAAC,sCAAD,EAAyC,KAAzC,EAAgD,IAAhD,CAA5B;AACAF,QAAAA,KAAK,CAACF,aAAN,CAAoBQ,MAApB;AACD;AACF,KAPD;;AAQAH,IAAAA,eAAe;AAChB,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEH,KAAK,CAACO,KADf;AAEE,IAAA,MAAM,EAAEP,KAAK,CAACM,MAFhB;AAGE,IAAA,MAAM,EAAEN,KAAK,CAACQ,MAHhB;AAIE,IAAA,OAAO,EAAEP,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CArBD;;AAuBA,IAAIQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLH,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYA,KADd;AAELD,IAAAA,MAAM,EAAEI,KAAK,CAACH,KAAN,CAAYD;AAFf,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAqDC,oBAArD,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport LatestWorks from \"./LatestWorks\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\nimport { setWork, setImagesData } from \"../../../../Redux/WorksReducer\";\r\n\r\nlet LatestWorksContainer = (props) => {\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const getLastWorkData = async () => {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      props.setWork(worksData);\r\n      if (worksData.length !== 0) {\r\n        const images = await request(\"/api/works/getMainPhotos/workPreview\", \"GET\", null);\r\n        props.setImagesData(images);\r\n      }\r\n    };\r\n    getLastWorkData();\r\n  }, []);\r\n  return (\r\n    <LatestWorks\r\n      works={props.works}\r\n      images={props.images}\r\n      params={props.params}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    works: state.works.works,\r\n    images: state.works.images,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWork, setImagesData })(LatestWorksContainer);\r\n"]},"metadata":{},"sourceType":"module"}