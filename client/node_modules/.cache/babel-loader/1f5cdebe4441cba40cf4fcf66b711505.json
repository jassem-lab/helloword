{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\src\\\\components\\\\Header\\\\NavbarContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { connect } from \"react-redux\";\nimport { setMenuState } from \"../../Redux/AdminReducer\";\n\nlet NavbarContainer = props => {\n  let [opacity, setOpacity] = useState(false);\n  let [toggle, setToggle] = useState(false);\n\n  const onToggleClick = () => {\n    if (!toggle) {\n      setToggle(true);\n      props.setMenuState(true);\n    } else {\n      setToggle(false);\n      props.setMenuState(false);\n    }\n  };\n\n  const closeMenu = () => {\n    setToggle(false);\n  };\n\n  useEffect(() => {\n    const onScrollFunction = () => {\n      if (window.pageYOffset > 0) {\n        setOpacity(true);\n      } else {\n        setOpacity(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScrollFunction);\n  }, []);\n  return /*#__PURE__*/React.createElement(Navbar, {\n    validation: props.validation,\n    opacity: opacity,\n    toggle: toggle,\n    onToggleClick: onToggleClick,\n    closeMenu: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    validation: state.admin.validation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setMenuState\n})(NavbarContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/Header/NavbarContainer.jsx"],"names":["React","useEffect","useState","Navbar","connect","setMenuState","NavbarContainer","props","opacity","setOpacity","toggle","setToggle","onToggleClick","closeMenu","onScrollFunction","window","pageYOffset","addEventListener","validation","mapStateToProps","state","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAApC;AACA,MAAI,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACF,MAAL,EAAa;AACXC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,MAAAA,KAAK,CAACF,YAAN,CAAmB,IAAnB;AACD,KAHD,MAGO;AACLM,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,MAAAA,KAAK,CAACF,YAAN,CAAmB,KAAnB;AACD;AACF,GARD;;AAUA,QAAMQ,SAAS,GAAG,MAAM;AACtBF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,gBAAgB,GAAG,MAAM;AAC7B,UAAIC,MAAM,CAACC,WAAP,GAAqB,CAAzB,EAA4B;AAC1BP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAFD,MAEO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAND;;AAOAM,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,gBAAlC;AACD,GATQ,EASN,EATM,CAAT;AAUA,sBACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEP,KAAK,CAACW,UADpB;AAEE,IAAA,OAAO,EAAEV,OAFX;AAGE,IAAA,MAAM,EAAEE,MAHV;AAIE,IAAA,aAAa,EAAEE,aAJjB;AAKE,IAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CApCD;;AAsCA,IAAIM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACC,KAAN,CAAYH;AADnB,GAAP;AAGD,CAJD;;AAMA,eAAed,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,eAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMenuState } from \"../../Redux/AdminReducer\";\r\n\r\nlet NavbarContainer = (props) => {\r\n  let [opacity, setOpacity] = useState(false);\r\n  let [toggle, setToggle] = useState(false);\r\n\r\n  const onToggleClick = () => {\r\n    if (!toggle) {\r\n      setToggle(true);\r\n      props.setMenuState(true);\r\n    } else {\r\n      setToggle(false);\r\n      props.setMenuState(false);\r\n    }\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setToggle(false);\r\n  };\r\n  useEffect(() => {\r\n    const onScrollFunction = () => {\r\n      if (window.pageYOffset > 0) {\r\n        setOpacity(true);\r\n      } else {\r\n        setOpacity(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", onScrollFunction);\r\n  }, []);\r\n  return (\r\n    <Navbar\r\n      validation={props.validation}\r\n      opacity={opacity}\r\n      toggle={toggle}\r\n      onToggleClick={onToggleClick}\r\n      closeMenu={closeMenu}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    validation: state.admin.validation,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setMenuState })(NavbarContainer);\r\n"]},"metadata":{},"sourceType":"module"}