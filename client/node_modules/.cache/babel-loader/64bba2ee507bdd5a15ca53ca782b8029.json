{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\hhh\\\\client\\\\src\\\\components\\\\adminPanel\\\\AdminPanelComponents\\\\adminWorkSpace\\\\WorkSpaceNewWorkContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport WorkSpaceNewWork from \"./WorkSpaceNewWork\";\nimport { setColor, setWhatIDid, setWork, setWorkId, setStyle, setImagesData } from \"../../../../Redux/WorksReducer\";\nimport { useHttp } from \"../../../../hooks/http.hook\";\n\nconst WorkSpaceNewWorkContainer = props => {\n  const {\n    loading,\n    request\n  } = useHttp();\n  useEffect(() => {\n    const getLastWorkData = async () => {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      props.setWork(worksData);\n\n      if (props.allWorks.length !== 0) {\n        const currentWorkId = await worksData[worksData.length - 1]._id;\n        props.setWorkId(currentWorkId);\n        const worksColors = await request(`/api/works/colors/${currentWorkId}`, \"GET\", null);\n        props.setColor(worksColors);\n        const worksStyles = await request(`/api/works/textStyles/${currentWorkId}`, \"GET\", null);\n        props.setStyle(worksStyles);\n        const whatIDid = await request(`/api/works/didPoint/${currentWorkId}`, \"GET\", null);\n        props.setWhatIDid(whatIDid);\n        const images = await request(`/api/works/getPhotos/${currentWorkId}`, \"GET\", null);\n        props.setImagesData(images);\n      }\n    };\n\n    getLastWorkData();\n  }, [props.allWorks.length]);\n  let [color, setColor] = useState(null);\n\n  const onColorChange = e => {\n    setColor(e.currentTarget.value);\n  };\n\n  const createWorkItem = async formData => {\n    try {\n      await request(\"/api/works/create\", \"POST\", { ...formData\n      });\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      props.setWork(worksData);\n      formData.workName = \"\";\n      formData.urlAdress = \"\";\n      formData.workTitle = \"\";\n    } catch (e) {}\n  };\n\n  const updateWorkItem = async formData => {\n    try {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      const updatedData = await request(`/api/works/${worksData[worksData.length - 1]._id}`, \"PATCH\", { ...formData\n      });\n    } catch (e) {}\n  };\n\n  const createWorkColor = async formData => {\n    try {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      const currentWorkId = worksData[worksData.length - 1]._id;\n      props.setWorkId(currentWorkId);\n      await request(\"/api/works/create-color\", \"POST\", {\n        id: currentWorkId,\n        color: color\n      });\n    } catch (e) {}\n  };\n\n  const createWorkStyle = async formData => {\n    try {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      const currentWorkId = worksData[worksData.length - 1]._id;\n      props.setWorkId(currentWorkId);\n      await request(\"/api/works/create-textStyle\", \"POST\", {\n        id: currentWorkId,\n        ...formData\n      });\n    } catch (e) {}\n  };\n\n  const createWorkDidPoint = async formData => {\n    try {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      const currentWorkId = worksData[worksData.length - 1]._id;\n      props.setWorkId(currentWorkId);\n      await request(\"/api/works/create-didPoint\", \"POST\", {\n        id: currentWorkId,\n        ...formData\n      });\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(WorkSpaceNewWork, {\n    images: props.images,\n    allWorks: props.allWorks //async req to server\n    ,\n    updateWorkItem: updateWorkItem,\n    createWorkItem: createWorkItem,\n    createWorkColor: createWorkColor,\n    createWorkStyle: createWorkStyle,\n    createWorkDidPoint: createWorkDidPoint // my functions\n    ,\n    onColorChange: onColorChange,\n    setImagesData: props.setImagesData,\n    currentWorkId: props.currentWorkId,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    token: state.admin.token,\n    allWorks: state.works.works,\n    images: state.works.images,\n    currentWorkId: state.works.currentWorkId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setColor,\n  setWhatIDid,\n  setWork,\n  setWorkId,\n  setStyle,\n  setImagesData\n})(WorkSpaceNewWorkContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/components/adminPanel/AdminPanelComponents/adminWorkSpace/WorkSpaceNewWorkContainer.js"],"names":["React","useState","useEffect","connect","WorkSpaceNewWork","setColor","setWhatIDid","setWork","setWorkId","setStyle","setImagesData","useHttp","WorkSpaceNewWorkContainer","props","loading","request","getLastWorkData","worksData","allWorks","length","currentWorkId","_id","worksColors","worksStyles","whatIDid","images","color","onColorChange","e","currentTarget","value","createWorkItem","formData","workName","urlAdress","workTitle","updateWorkItem","updatedData","createWorkColor","id","createWorkStyle","createWorkDidPoint","mapStateToProps","state","token","admin","works"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WorkSpaceNewWork from \"./WorkSpaceNewWork\";\r\nimport {\r\n  setColor,\r\n  setWhatIDid,\r\n  setWork,\r\n  setWorkId,\r\n  setStyle,\r\n  setImagesData,\r\n} from \"../../../../Redux/WorksReducer\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\n\r\nconst WorkSpaceNewWorkContainer = (props) => {\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const getLastWorkData = async () => {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      props.setWork(worksData);\r\n      if (props.allWorks.length !== 0) {\r\n        const currentWorkId = await worksData[worksData.length - 1]._id;\r\n        props.setWorkId(currentWorkId);\r\n        const worksColors = await request(`/api/works/colors/${currentWorkId}`, \"GET\", null);\r\n        props.setColor(worksColors);\r\n        const worksStyles = await request(`/api/works/textStyles/${currentWorkId}`, \"GET\", null);\r\n        props.setStyle(worksStyles);\r\n        const whatIDid = await request(`/api/works/didPoint/${currentWorkId}`, \"GET\", null);\r\n        props.setWhatIDid(whatIDid);\r\n        const images = await request(`/api/works/getPhotos/${currentWorkId}`, \"GET\", null);\r\n        props.setImagesData(images);\r\n      }\r\n    };\r\n    getLastWorkData();\r\n  }, [props.allWorks.length]);\r\n\r\n  let [color, setColor] = useState(null);\r\n  const onColorChange = (e) => {\r\n    setColor(e.currentTarget.value);\r\n  };\r\n\r\n  const createWorkItem = async (formData) => {\r\n    try {\r\n      await request(\"/api/works/create\", \"POST\", {\r\n        ...formData,\r\n      });\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      props.setWork(worksData);\r\n      formData.workName = \"\";\r\n      formData.urlAdress = \"\";\r\n      formData.workTitle = \"\";\r\n    } catch (e) {}\r\n  };\r\n\r\n  const updateWorkItem = async (formData) => {\r\n    try {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      const updatedData = await request(\r\n        `/api/works/${worksData[worksData.length - 1]._id}`,\r\n        \"PATCH\",\r\n        {\r\n          ...formData,\r\n        }\r\n      );\r\n    } catch (e) {}\r\n  };\r\n\r\n  const createWorkColor = async (formData) => {\r\n    try {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      const currentWorkId = worksData[worksData.length - 1]._id;\r\n      props.setWorkId(currentWorkId);\r\n      await request(\"/api/works/create-color\", \"POST\", {\r\n        id: currentWorkId,\r\n        color: color,\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  const createWorkStyle = async (formData) => {\r\n    try {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      const currentWorkId = worksData[worksData.length - 1]._id;\r\n      props.setWorkId(currentWorkId);\r\n      await request(\"/api/works/create-textStyle\", \"POST\", {\r\n        id: currentWorkId,\r\n        ...formData,\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  const createWorkDidPoint = async (formData) => {\r\n    try {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      const currentWorkId = worksData[worksData.length - 1]._id;\r\n      props.setWorkId(currentWorkId);\r\n      await request(\"/api/works/create-didPoint\", \"POST\", {\r\n        id: currentWorkId,\r\n        ...formData,\r\n      });\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <WorkSpaceNewWork\r\n      images={props.images}\r\n      allWorks={props.allWorks}\r\n      //async req to server\r\n      updateWorkItem={updateWorkItem}\r\n      createWorkItem={createWorkItem}\r\n      createWorkColor={createWorkColor}\r\n      createWorkStyle={createWorkStyle}\r\n      createWorkDidPoint={createWorkDidPoint}\r\n      // my functions\r\n      onColorChange={onColorChange}\r\n      setImagesData={props.setImagesData}\r\n      currentWorkId={props.currentWorkId}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    token: state.admin.token,\r\n    allWorks: state.works.works,\r\n    images: state.works.images,\r\n    currentWorkId: state.works.currentWorkId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setColor,\r\n  setWhatIDid,\r\n  setWork,\r\n  setWorkId,\r\n  setStyle,\r\n  setImagesData,\r\n})(WorkSpaceNewWorkContainer);\r\n"]},"metadata":{},"sourceType":"module"}