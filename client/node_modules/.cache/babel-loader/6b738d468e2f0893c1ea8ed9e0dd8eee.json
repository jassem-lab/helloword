{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\hhh\\\\client\\\\src\\\\components\\\\adminPanel\\\\AdminPanelComponents\\\\adminWorkSpace\\\\NewWorkComponents\\\\FilePondWorks.js\";\nimport React, { useState } from \"react\"; // Import React FilePond\n\nimport { FilePond, registerPlugin } from \"react-filepond\"; // Import FilePond styles\n\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\"; // Register the plugins\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileEncode, FilePondPluginImageResize);\n\nconst FilePondWorks = props => {\n  const [files, setFiles] = useState([]);\n  const [input, setInput] = useState();\n\n  const inputOnChange = e => {\n    setInput(e.currentTarget.value);\n  };\n\n  const currentId = props.currentWorkId;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filePondWorks wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/api/works/addPhoto/\" + currentId,\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"editImageDataTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Add image to work\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editImgData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editInput imgInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editInput imgInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"descr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"descr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), props.allWorks !== undefined || props.allWorks !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editInput imgInput hideInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Owner: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"owner\",\n    onChange: inputOnChange,\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editFontStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Type: \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"type\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"workPhoto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"workPhoto\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"workPreview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"workPreview\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"workBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"workBackground\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"desktopImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"desktopImg\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"mobileImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"mobileImg\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filePondArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilePond, {\n    setOptions: {\n      stylePanelAspectRatio: 150 / 100,\n      imageResizeTargetWidth: 100,\n      imageResizeTargetHight: 150\n    },\n    files: files,\n    onupdatefiles: setFiles,\n    allowMultiple: false,\n    maxFiles: 1,\n    name: \"img\",\n    labelIdle: \"Drag & Drop your files or <span class=\\\"filepond--label-action\\\">Browse</span>\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, props.loading ? \"loading...\" : null)));\n};\n\nexport default FilePondWorks;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/components/adminPanel/AdminPanelComponents/adminWorkSpace/NewWorkComponents/FilePondWorks.js"],"names":["React","useState","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileEncode","FilePondPluginImageResize","FilePondWorks","props","files","setFiles","input","setInput","inputOnChange","e","currentTarget","value","currentId","currentWorkId","allWorks","undefined","stylePanelAspectRatio","imageResizeTargetWidth","imageResizeTargetHight","loading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\n\r\n// Register the plugins\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst FilePondWorks = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [input, setInput] = useState();\r\n  const inputOnChange = (e) => {\r\n    setInput(e.currentTarget.value);\r\n  };\r\n  const currentId = props.currentWorkId;\r\n  return (\r\n    <div className=\"filePondWorks wrapper\">\r\n      <form action={\"/api/works/addPhoto/\" + currentId} method=\"POST\">\r\n        <h2 className=\"editImageDataTitle\">Add image to work</h2>\r\n        <div className=\"editImgData\">\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input type=\"text\" name=\"name\" />\r\n          </div>\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"descr\">Description: </label>\r\n            <input type=\"text\" name=\"descr\" />\r\n          </div>\r\n          {props.allWorks !== undefined || props.allWorks !== null ? (\r\n            <div className=\"editInput imgInput hideInput\">\r\n              <label htmlFor=\"owner\">Owner: </label>\r\n              <input type=\"text\" name=\"owner\" onChange={inputOnChange} value={input} />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"editFontStyle\">\r\n            <label htmlFor=\"type\">Type: </label>\r\n            <select name=\"type\" id=\"\">\r\n              <option value=\"workPhoto\">workPhoto</option>\r\n              <option value=\"workPreview\">workPreview</option>\r\n              <option value=\"workBackground\">workBackground</option>\r\n              <option value=\"desktopImg\">desktopImg</option>\r\n              <option value=\"mobileImg\">mobileImg</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"filePondArea\">\r\n          <FilePond\r\n            setOptions={{\r\n              stylePanelAspectRatio: 150 / 100,\r\n              imageResizeTargetWidth: 100,\r\n              imageResizeTargetHight: 150,\r\n            }}\r\n            files={files}\r\n            onupdatefiles={setFiles}\r\n            allowMultiple={false}\r\n            maxFiles={1}\r\n            name=\"img\"\r\n            labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n          />\r\n          <div className=\"buttonPage\">\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </div>\r\n        <div>{props.loading ? \"loading...\" : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilePondWorks;\r\n"]},"metadata":{},"sourceType":"module"}