{"ast":null,"code":"const token = \"ADMINREDUCER/TOKEN\";\nconst userId = \"ADMINREDUCER/USERID\";\nconst error = \"ADMINREDUCER/ERROR\";\nconst authentification = \"ADMINREDUCER/AUTHENTIFICATION\";\nconst menu = \"ADMINREDUCER/MENU\";\nlet initialState = {\n  userId: null,\n  token: null,\n  login: \"aimurzaev\",\n  validation: false,\n  error: null,\n  photos: [{\n    id: 0,\n    img: require(\"./img/photos/1.jpg\"),\n    imdDescr: \"I love ocean!\"\n  }, {\n    id: 1,\n    img: require(\"./img/photos/2.jpg\"),\n    imdDescr: \"my friend\"\n  }, {\n    id: 2,\n    img: require(\"./img/photos/3.jpg\"),\n    imdDescr: \"me, my self and i\"\n  }, {\n    id: 3,\n    img: require(\"./img/photos/4.jpg\"),\n    imdDescr: \"my love\"\n  }, {\n    id: 4,\n    img: require(\"./img/photos/5.jpg\"),\n    imdDescr: \"again ocean\"\n  }, {\n    id: 5,\n    img: require(\"./img/photos/6.jpg\"),\n    imdDescr: \"like a model\"\n  }],\n  feedbacks: [],\n  menuOpened: false\n};\n\nconst AdminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case token:\n      return { ...state,\n        token: action.jwtToken\n      };\n\n    case userId:\n      return { ...state,\n        userId: action.id\n      };\n\n    case authentification:\n      return { ...state,\n        validation: action.status\n      };\n\n    case error:\n      return { ...state,\n        error: action.errorMessage\n      };\n\n    case menu:\n      return { ...state,\n        menuOpened: action.currentMenuState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setToken = jwtToken => {\n  return {\n    type: token,\n    jwtToken\n  };\n};\nexport const setUserId = id => {\n  return {\n    type: userId,\n    id\n  };\n};\nexport const setAuth = status => {\n  return {\n    type: authentification,\n    status\n  };\n};\nexport const setError = errorMessage => {\n  return {\n    type: error,\n    errorMessage\n  };\n};\nexport const setMenuState = currentMenuState => {\n  return {\n    type: menu,\n    currentMenuState\n  };\n};\nconst storageName = \"userData\";\nexport const login = (jwtToken, id) => {\n  return dispatch => {\n    dispatch(setToken(jwtToken));\n    dispatch(setUserId(id));\n    dispatch(setAuth(true));\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(setToken(null));\n    dispatch(setUserId(null));\n    dispatch(setAuth(false));\n    localStorage.removeItem(storageName);\n  };\n};\nexport default AdminReducer;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/Redux/AdminReducer.js"],"names":["token","userId","error","authentification","menu","initialState","login","validation","photos","id","img","require","imdDescr","feedbacks","menuOpened","AdminReducer","state","action","type","jwtToken","status","errorMessage","currentMenuState","setToken","setUserId","setAuth","setError","setMenuState","storageName","dispatch","localStorage","setItem","JSON","stringify","logout","removeItem"],"mappings":"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","sourcesContent":["const token = \"ADMINREDUCER/TOKEN\";\r\nconst userId = \"ADMINREDUCER/USERID\";\r\nconst error = \"ADMINREDUCER/ERROR\";\r\nconst authentification = \"ADMINREDUCER/AUTHENTIFICATION\";\r\nconst menu = \"ADMINREDUCER/MENU\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  token: null,\r\n  login: \"aimurzaev\",\r\n  validation: false,\r\n  error: null,\r\n  photos: [\r\n    {\r\n      id: 0,\r\n      img: require(\"./img/photos/1.jpg\"),\r\n      imdDescr: \"I love ocean!\",\r\n    },\r\n    {\r\n      id: 1,\r\n      img: require(\"./img/photos/2.jpg\"),\r\n      imdDescr: \"my friend\",\r\n    },\r\n    {\r\n      id: 2,\r\n      img: require(\"./img/photos/3.jpg\"),\r\n      imdDescr: \"me, my self and i\",\r\n    },\r\n    {\r\n      id: 3,\r\n      img: require(\"./img/photos/4.jpg\"),\r\n      imdDescr: \"my love\",\r\n    },\r\n    {\r\n      id: 4,\r\n      img: require(\"./img/photos/5.jpg\"),\r\n      imdDescr: \"again ocean\",\r\n    },\r\n    {\r\n      id: 5,\r\n      img: require(\"./img/photos/6.jpg\"),\r\n      imdDescr: \"like a model\",\r\n    },\r\n  ],\r\n  feedbacks: [],\r\n  menuOpened: false,\r\n};\r\n\r\nconst AdminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case token:\r\n      return {\r\n        ...state,\r\n        token: action.jwtToken,\r\n      };\r\n    case userId:\r\n      return {\r\n        ...state,\r\n        userId: action.id,\r\n      };\r\n    case authentification:\r\n      return {\r\n        ...state,\r\n        validation: action.status,\r\n      };\r\n    case error:\r\n      return {\r\n        ...state,\r\n        error: action.errorMessage,\r\n      };\r\n    case menu:\r\n      return {\r\n        ...state,\r\n        menuOpened: action.currentMenuState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setToken = (jwtToken) => {\r\n  return {\r\n    type: token,\r\n    jwtToken,\r\n  };\r\n};\r\n\r\nexport const setUserId = (id) => {\r\n  return {\r\n    type: userId,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setAuth = (status) => {\r\n  return {\r\n    type: authentification,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const setError = (errorMessage) => {\r\n  return {\r\n    type: error,\r\n    errorMessage,\r\n  };\r\n};\r\n\r\nexport const setMenuState = (currentMenuState) => {\r\n  return {\r\n    type: menu,\r\n    currentMenuState,\r\n  };\r\n};\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const login = (jwtToken, id) => {\r\n  return (dispatch) => {\r\n    dispatch(setToken(jwtToken));\r\n    dispatch(setUserId(id));\r\n    dispatch(setAuth(true));\r\n    localStorage.setItem(storageName, JSON.stringify({ userId: id, token: jwtToken }));\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    dispatch(setToken(null));\r\n    dispatch(setUserId(null));\r\n    dispatch(setAuth(false));\r\n    localStorage.removeItem(storageName);\r\n  };\r\n};\r\n\r\nexport default AdminReducer;\r\n"]},"metadata":{},"sourceType":"module"}