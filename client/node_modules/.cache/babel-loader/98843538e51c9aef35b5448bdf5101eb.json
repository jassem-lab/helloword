{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\hhh\\\\client\\\\src\\\\components\\\\PortfolioPage\\\\PortfolioPageWorks\\\\WorkCommentsContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport WorkComments from \"./WorkComments\";\nimport { uploadCurrentWorkComments, uploadCurrentCommentId } from \"../../../Redux/WorksReducer\";\nimport { useHttp } from \"../../../hooks/http.hook\";\n\nconst WorkCommentsContainer = props => {\n  const {\n    request\n  } = useHttp();\n\n  const addWorkComment = async formData => {\n    try {\n      await request(\"/api/works/createWorkComment\", \"POST\", { ...formData,\n        workOwner: props.currentWorkId\n      });\n      const workCommentsResponse = await request(`/api/works/getWorkComments/${props.currentWorkId}`, \"GET\", null);\n      props.uploadCurrentWorkComments(workCommentsResponse);\n      formData.userName = \"\";\n      formData.CommentText = \"\";\n    } catch (e) {}\n  };\n\n  const addWorkCommentAnswer = async formData => {\n    try {\n      await request(\"/api/works/createWorkComment\", \"POST\", { ...formData,\n        workOwner: props.currentWorkId,\n        commentOwner: props.currentCommentId\n      });\n      const workCommentsResponse = await request(`/api/works/getWorkComments/${props.currentWorkId}`, \"GET\", null);\n      props.uploadCurrentWorkComments(workCommentsResponse);\n      props.uploadCurrentCommentId(null);\n    } catch (e) {}\n  };\n\n  const addAnswer = e => {\n    props.uploadCurrentCommentId(e.currentTarget.id);\n  };\n\n  return /*#__PURE__*/React.createElement(WorkComments // props\n  , {\n    workComments: props.workComments,\n    currentCommentId: props.currentCommentId // functions\n    ,\n    addWorkComment: addWorkComment,\n    addWorkCommentAnswer: addWorkCommentAnswer,\n    addAnswer: addAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    workComments: state.works.workComments,\n    currentWorkId: state.works.currentWorkId,\n    currentCommentId: state.works.currentCommentId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  uploadCurrentWorkComments,\n  uploadCurrentCommentId\n})(WorkCommentsContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/components/PortfolioPage/PortfolioPageWorks/WorkCommentsContainer.jsx"],"names":["React","connect","WorkComments","uploadCurrentWorkComments","uploadCurrentCommentId","useHttp","WorkCommentsContainer","props","request","addWorkComment","formData","workOwner","currentWorkId","workCommentsResponse","userName","CommentText","e","addWorkCommentAnswer","commentOwner","currentCommentId","addAnswer","currentTarget","id","workComments","mapStateToProps","state","works"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,yBAAT,EAAoCC,sBAApC,QAAkE,6BAAlE;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAcH,OAAO,EAA3B;;AAEA,QAAMI,cAAc,GAAG,MAAOC,QAAP,IAAoB;AACzC,QAAI;AACF,YAAMF,OAAO,CAAC,8BAAD,EAAiC,MAAjC,EAAyC,EACpD,GAAGE,QADiD;AAEpDC,QAAAA,SAAS,EAAEJ,KAAK,CAACK;AAFmC,OAAzC,CAAb;AAIA,YAAMC,oBAAoB,GAAG,MAAML,OAAO,CACvC,8BAA6BD,KAAK,CAACK,aAAc,EADV,EAExC,KAFwC,EAGxC,IAHwC,CAA1C;AAKAL,MAAAA,KAAK,CAACJ,yBAAN,CAAgCU,oBAAhC;AACAH,MAAAA,QAAQ,CAACI,QAAT,GAAoB,EAApB;AACAJ,MAAAA,QAAQ,CAACK,WAAT,GAAuB,EAAvB;AACD,KAbD,CAaE,OAAOC,CAAP,EAAU,CAAE;AACf,GAfD;;AAiBA,QAAMC,oBAAoB,GAAG,MAAOP,QAAP,IAAoB;AAC/C,QAAI;AACF,YAAMF,OAAO,CAAC,8BAAD,EAAiC,MAAjC,EAAyC,EACpD,GAAGE,QADiD;AAEpDC,QAAAA,SAAS,EAAEJ,KAAK,CAACK,aAFmC;AAGpDM,QAAAA,YAAY,EAAEX,KAAK,CAACY;AAHgC,OAAzC,CAAb;AAKA,YAAMN,oBAAoB,GAAG,MAAML,OAAO,CACvC,8BAA6BD,KAAK,CAACK,aAAc,EADV,EAExC,KAFwC,EAGxC,IAHwC,CAA1C;AAKAL,MAAAA,KAAK,CAACJ,yBAAN,CAAgCU,oBAAhC;AACAN,MAAAA,KAAK,CAACH,sBAAN,CAA6B,IAA7B;AACD,KAbD,CAaE,OAAOY,CAAP,EAAU,CAAE;AACf,GAfD;;AAgBA,QAAMI,SAAS,GAAIJ,CAAD,IAAO;AACvBT,IAAAA,KAAK,CAACH,sBAAN,CAA6BY,CAAC,CAACK,aAAF,CAAgBC,EAA7C;AACD,GAFD;;AAIA,sBACE,oBAAC,YAAD,CACE;AADF;AAEE,IAAA,YAAY,EAAEf,KAAK,CAACgB,YAFtB;AAGE,IAAA,gBAAgB,EAAEhB,KAAK,CAACY,gBAH1B,CAIE;AAJF;AAKE,IAAA,cAAc,EAAEV,cALlB;AAME,IAAA,oBAAoB,EAAEQ,oBANxB;AAOE,IAAA,SAAS,EAAEG,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAnDD;;AAqDA,IAAII,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLF,IAAAA,YAAY,EAAEE,KAAK,CAACC,KAAN,CAAYH,YADrB;AAELX,IAAAA,aAAa,EAAEa,KAAK,CAACC,KAAN,CAAYd,aAFtB;AAGLO,IAAAA,gBAAgB,EAAEM,KAAK,CAACC,KAAN,CAAYP;AAHzB,GAAP;AAKD,CAND;;AAOA,eAAelB,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA,yBAAF;AAA6BC,EAAAA;AAA7B,CAAlB,CAAP,CACbE,qBADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WorkComments from \"./WorkComments\";\r\nimport { uploadCurrentWorkComments, uploadCurrentCommentId } from \"../../../Redux/WorksReducer\";\r\nimport { useHttp } from \"../../../hooks/http.hook\";\r\n\r\nconst WorkCommentsContainer = (props) => {\r\n  const { request } = useHttp();\r\n\r\n  const addWorkComment = async (formData) => {\r\n    try {\r\n      await request(\"/api/works/createWorkComment\", \"POST\", {\r\n        ...formData,\r\n        workOwner: props.currentWorkId,\r\n      });\r\n      const workCommentsResponse = await request(\r\n        `/api/works/getWorkComments/${props.currentWorkId}`,\r\n        \"GET\",\r\n        null\r\n      );\r\n      props.uploadCurrentWorkComments(workCommentsResponse);\r\n      formData.userName = \"\";\r\n      formData.CommentText = \"\";\r\n    } catch (e) {}\r\n  };\r\n\r\n  const addWorkCommentAnswer = async (formData) => {\r\n    try {\r\n      await request(\"/api/works/createWorkComment\", \"POST\", {\r\n        ...formData,\r\n        workOwner: props.currentWorkId,\r\n        commentOwner: props.currentCommentId,\r\n      });\r\n      const workCommentsResponse = await request(\r\n        `/api/works/getWorkComments/${props.currentWorkId}`,\r\n        \"GET\",\r\n        null\r\n      );\r\n      props.uploadCurrentWorkComments(workCommentsResponse);\r\n      props.uploadCurrentCommentId(null);\r\n    } catch (e) {}\r\n  };\r\n  const addAnswer = (e) => {\r\n    props.uploadCurrentCommentId(e.currentTarget.id);\r\n  };\r\n\r\n  return (\r\n    <WorkComments\r\n      // props\r\n      workComments={props.workComments}\r\n      currentCommentId={props.currentCommentId}\r\n      // functions\r\n      addWorkComment={addWorkComment}\r\n      addWorkCommentAnswer={addWorkCommentAnswer}\r\n      addAnswer={addAnswer}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    workComments: state.works.workComments,\r\n    currentWorkId: state.works.currentWorkId,\r\n    currentCommentId: state.works.currentCommentId,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { uploadCurrentWorkComments, uploadCurrentCommentId })(\r\n  WorkCommentsContainer\r\n);\r\n"]},"metadata":{},"sourceType":"module"}