{"ast":null,"code":"const setCurrentArticleType = \"ARTICLESREDUCER/CHANGE-ARTICLE-ID\";\nconst setCurrentArticleName = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-NAME\";\nconst setArticleData = \"ARTICLESREDUCER/SET-ARTICLE-DATA\";\nconst setBlocksData = \"ARTICLESREDUCER/SET-BLOCKS-DATA\";\nconst setCurrentArticleBlockType = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-BLOCK-TYPE\";\nconst setBlocksImages = \"ARTICLESREDUCER/SET-BLOCKS-IMAGES\";\nconst setArticlesImages = \"ARTICLESREDUCER/SET-ARTICLES-IMAGES\";\nconst setBlocksLists = \"ARTICLESREDUCER/SET-BLOCKS-LISTS\";\nconst setBlocksTextAreas = \"ARTICLESREDUCER/SET-BLOCKS-TEXT-AREAS\";\nconst setCurrentArticleComments = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-COMMENTS\";\nconst setCommentAnswerId = \"ARTICLESREDUCER/SET-COMMENT-ANSWERID\";\nlet initialState = {\n  currentArticleId: null,\n  currentArticleName: null,\n  currentBlockId: null,\n  articles: [],\n  images: [],\n  blocks: [],\n  blocksImages: [],\n  blocksLists: [],\n  blocksTextAreas: [],\n  articleComments: [],\n  currentCommentId: null\n};\n\nconst ArticlesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case setArticleData:\n      return { ...state,\n        articles: action.newArticleData\n      };\n\n    case setArticlesImages:\n      return { ...state,\n        images: action.newArticlesImages\n      };\n\n    case setBlocksData:\n      return { ...state,\n        blocks: action.newBlocksData\n      };\n\n    case setCurrentArticleBlockType:\n      return { ...state,\n        currentBlockId: action.currentBlockId\n      };\n\n    case setBlocksImages:\n      return { ...state,\n        blocksImages: action.newBlocksImages\n      };\n\n    case setBlocksLists:\n      return { ...state,\n        blocksLists: action.newBlocksLists\n      };\n\n    case setBlocksTextAreas:\n      return { ...state,\n        blocksTextAreas: action.newBlocksTextAreas\n      };\n\n    case setCurrentArticleType:\n      return { ...state,\n        currentArticleId: action.currentArticleId\n      };\n\n    case setCurrentArticleName:\n      return { ...state,\n        currentArticleName: action.currentArticleName\n      };\n\n    case setCurrentArticleComments:\n      return { ...state,\n        articleComments: action.currentArticleComments\n      };\n\n    case setCommentAnswerId:\n      return { ...state,\n        currentCommentId: action.newCurrentCommentId\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setArticleId = currentArticleId => {\n  return {\n    type: setCurrentArticleType,\n    currentArticleId\n  };\n};\nexport const setArticleName = currentArticleName => {\n  return {\n    type: setCurrentArticleName,\n    currentArticleName\n  };\n};\nexport const setArticles = newArticleData => {\n  return {\n    type: setArticleData,\n    newArticleData\n  };\n};\nexport const setArticlesMainImages = newArticlesImages => {\n  return {\n    type: setArticlesImages,\n    newArticlesImages\n  };\n};\nexport const setArticleBlocks = newBlocksData => {\n  return {\n    type: setBlocksData,\n    newBlocksData\n  };\n};\nexport const setCurrentBlockId = currentBlockId => {\n  return {\n    type: setCurrentArticleBlockType,\n    currentBlockId\n  };\n};\nexport const setArticleBlocksImages = newBlocksImages => {\n  return {\n    type: setBlocksImages,\n    newBlocksImages\n  };\n};\nexport const setArticleBlocksLists = newBlocksLists => {\n  return {\n    type: setBlocksLists,\n    newBlocksLists\n  };\n};\nexport const setArticleBlocksTextAreas = newBlocksTextAreas => {\n  return {\n    type: setBlocksTextAreas,\n    newBlocksTextAreas\n  };\n};\nexport const uploadCurrentArticleComments = currentArticleComments => {\n  return {\n    type: setCurrentArticleComments,\n    currentArticleComments\n  };\n};\nexport const uploadCurrentCommentId = newCurrentCommentId => {\n  return {\n    type: setCommentAnswerId,\n    newCurrentCommentId\n  };\n};\nexport default ArticlesReducer;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/Redux/ArticlesReducer.js"],"names":["setCurrentArticleType","setCurrentArticleName","setArticleData","setBlocksData","setCurrentArticleBlockType","setBlocksImages","setArticlesImages","setBlocksLists","setBlocksTextAreas","setCurrentArticleComments","setCommentAnswerId","initialState","currentArticleId","currentArticleName","currentBlockId","articles","images","blocks","blocksImages","blocksLists","blocksTextAreas","articleComments","currentCommentId","ArticlesReducer","state","action","type","newArticleData","newArticlesImages","newBlocksData","newBlocksImages","newBlocksLists","newBlocksTextAreas","currentArticleComments","newCurrentCommentId","setArticleId","setArticleName","setArticles","setArticlesMainImages","setArticleBlocks","setCurrentBlockId","setArticleBlocksImages","setArticleBlocksLists","setArticleBlocksTextAreas","uploadCurrentArticleComments","uploadCurrentCommentId"],"mappings":"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","sourcesContent":["const setCurrentArticleType = \"ARTICLESREDUCER/CHANGE-ARTICLE-ID\";\r\nconst setCurrentArticleName = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-NAME\";\r\nconst setArticleData = \"ARTICLESREDUCER/SET-ARTICLE-DATA\";\r\nconst setBlocksData = \"ARTICLESREDUCER/SET-BLOCKS-DATA\";\r\nconst setCurrentArticleBlockType = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-BLOCK-TYPE\";\r\nconst setBlocksImages = \"ARTICLESREDUCER/SET-BLOCKS-IMAGES\";\r\nconst setArticlesImages = \"ARTICLESREDUCER/SET-ARTICLES-IMAGES\";\r\nconst setBlocksLists = \"ARTICLESREDUCER/SET-BLOCKS-LISTS\";\r\nconst setBlocksTextAreas = \"ARTICLESREDUCER/SET-BLOCKS-TEXT-AREAS\";\r\nconst setCurrentArticleComments = \"ARTICLESREDUCER/SET-CURRENT-ARTICLE-COMMENTS\";\r\nconst setCommentAnswerId = \"ARTICLESREDUCER/SET-COMMENT-ANSWERID\";\r\n\r\nlet initialState = {\r\n  currentArticleId: null,\r\n  currentArticleName: null,\r\n  currentBlockId: null,\r\n  articles: [],\r\n  images: [],\r\n  blocks: [],\r\n  blocksImages: [],\r\n  blocksLists: [],\r\n  blocksTextAreas: [],\r\n  articleComments: [],\r\n  currentCommentId: null,\r\n};\r\n\r\nconst ArticlesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setArticleData:\r\n      return {\r\n        ...state,\r\n        articles: action.newArticleData,\r\n      };\r\n    case setArticlesImages:\r\n      return {\r\n        ...state,\r\n        images: action.newArticlesImages,\r\n      };\r\n    case setBlocksData:\r\n      return {\r\n        ...state,\r\n        blocks: action.newBlocksData,\r\n      };\r\n    case setCurrentArticleBlockType:\r\n      return {\r\n        ...state,\r\n        currentBlockId: action.currentBlockId,\r\n      };\r\n    case setBlocksImages:\r\n      return {\r\n        ...state,\r\n        blocksImages: action.newBlocksImages,\r\n      };\r\n    case setBlocksLists:\r\n      return {\r\n        ...state,\r\n        blocksLists: action.newBlocksLists,\r\n      };\r\n    case setBlocksTextAreas:\r\n      return {\r\n        ...state,\r\n        blocksTextAreas: action.newBlocksTextAreas,\r\n      };\r\n    case setCurrentArticleType:\r\n      return {\r\n        ...state,\r\n        currentArticleId: action.currentArticleId,\r\n      };\r\n    case setCurrentArticleName:\r\n      return {\r\n        ...state,\r\n        currentArticleName: action.currentArticleName,\r\n      };\r\n    case setCurrentArticleComments:\r\n      return {\r\n        ...state,\r\n        articleComments: action.currentArticleComments,\r\n      };\r\n    case setCommentAnswerId:\r\n      return {\r\n        ...state,\r\n        currentCommentId: action.newCurrentCommentId,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setArticleId = (currentArticleId) => {\r\n  return {\r\n    type: setCurrentArticleType,\r\n    currentArticleId,\r\n  };\r\n};\r\n\r\nexport const setArticleName = (currentArticleName) => {\r\n  return {\r\n    type: setCurrentArticleName,\r\n    currentArticleName,\r\n  };\r\n};\r\n\r\nexport const setArticles = (newArticleData) => {\r\n  return {\r\n    type: setArticleData,\r\n    newArticleData,\r\n  };\r\n};\r\n\r\nexport const setArticlesMainImages = (newArticlesImages) => {\r\n  return {\r\n    type: setArticlesImages,\r\n    newArticlesImages,\r\n  };\r\n};\r\n\r\nexport const setArticleBlocks = (newBlocksData) => {\r\n  return {\r\n    type: setBlocksData,\r\n    newBlocksData,\r\n  };\r\n};\r\n\r\nexport const setCurrentBlockId = (currentBlockId) => {\r\n  return {\r\n    type: setCurrentArticleBlockType,\r\n    currentBlockId,\r\n  };\r\n};\r\n\r\nexport const setArticleBlocksImages = (newBlocksImages) => {\r\n  return {\r\n    type: setBlocksImages,\r\n    newBlocksImages,\r\n  };\r\n};\r\n\r\nexport const setArticleBlocksLists = (newBlocksLists) => {\r\n  return {\r\n    type: setBlocksLists,\r\n    newBlocksLists,\r\n  };\r\n};\r\n\r\nexport const setArticleBlocksTextAreas = (newBlocksTextAreas) => {\r\n  return {\r\n    type: setBlocksTextAreas,\r\n    newBlocksTextAreas,\r\n  };\r\n};\r\n\r\nexport const uploadCurrentArticleComments = (currentArticleComments) => {\r\n  return {\r\n    type: setCurrentArticleComments,\r\n    currentArticleComments,\r\n  };\r\n};\r\n\r\nexport const uploadCurrentCommentId = (newCurrentCommentId) => {\r\n  return {\r\n    type: setCommentAnswerId,\r\n    newCurrentCommentId,\r\n  };\r\n};\r\n\r\nexport default ArticlesReducer;\r\n"]},"metadata":{},"sourceType":"module"}