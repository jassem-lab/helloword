{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import Work from\"./Work\";import{compose}from\"redux\";import{withRouter}from\"react-router-dom\";import{useHttp}from\"../../../hooks/http.hook\";import{setColor,setWhatIDid,setWork,setWorkId,setWorkName,setStyle,setImagesData,uploadCurrentWorkComments}from\"../../../Redux/WorksReducer\";var WorkContainer=function WorkContainer(props){// get data from url\nvar workName=props.match.params.workName;props.setWorkName(workName);var _useHttp=useHttp(),loading=_useHttp.loading,request=_useHttp.request;useEffect(function(){var getLastWorkData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var worksData,worksColors,worksStyles,whatIDid,images,workCommentsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(props.currentWorkName===workName)){_context.next=27;break;}_context.next=3;return request(\"/api/works/getWork/\".concat(props.currentWorkName),\"GET\",null);case 3:worksData=_context.sent;props.setWork(worksData);props.setWorkId(worksData[0]._id);// get extended current work data\nif(!(props.currentWorkId!==undefined&&props.currentWorkId===worksData[0]._id)){_context.next=27;break;}_context.next=9;return request(\"/api/works/colors/\".concat(props.currentWorkId),\"GET\",null);case 9:worksColors=_context.sent;props.setColor(worksColors);_context.next=13;return request(\"/api/works/textStyles/\".concat(props.currentWorkId),\"GET\",null);case 13:worksStyles=_context.sent;props.setStyle(worksStyles);_context.next=17;return request(\"/api/works/didPoint/\".concat(props.currentWorkId),\"GET\",null);case 17:whatIDid=_context.sent;props.setWhatIDid(whatIDid);_context.next=21;return request(\"/api/works/getPhotos/\".concat(props.currentWorkId),\"GET\",null);case 21:images=_context.sent;props.setImagesData(images);_context.next=25;return request(\"/api/works/getWorkComments/\".concat(props.currentWorkId),\"GET\",null);case 25:workCommentsResponse=_context.sent;props.uploadCurrentWorkComments(workCommentsResponse);case 27:case\"end\":return _context.stop();}}},_callee);}));return function getLastWorkData(){return _ref.apply(this,arguments);};}();getLastWorkData();},[props.currentWorkId,props.currentWorkName]);return/*#__PURE__*/React.createElement(Work,{works:props.works,images:props.images,loading:loading});};var mapStateToProps=function mapStateToProps(state){return{works:state.works.works,images:state.works.images,currentWorkId:state.works.currentWorkId,currentWorkName:state.works.currentWorkName};};export default compose(connect(mapStateToProps,{setColor:setColor,setWhatIDid:setWhatIDid,setWork:setWork,setWorkId:setWorkId,setWorkName:setWorkName,setStyle:setStyle,setImagesData:setImagesData,uploadCurrentWorkComments:uploadCurrentWorkComments}),withRouter)(WorkContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/PortfolioPage/PortfolioPageWorks/WorkContainer.jsx"],"names":["React","useEffect","connect","Work","compose","withRouter","useHttp","setColor","setWhatIDid","setWork","setWorkId","setWorkName","setStyle","setImagesData","uploadCurrentWorkComments","WorkContainer","props","workName","match","params","loading","request","getLastWorkData","currentWorkName","worksData","_id","currentWorkId","undefined","worksColors","worksStyles","whatIDid","images","workCommentsResponse","works","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Work from \"./Work\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useHttp } from \"../../../hooks/http.hook\";\r\nimport {\r\n  setColor,\r\n  setWhatIDid,\r\n  setWork,\r\n  setWorkId,\r\n  setWorkName,\r\n  setStyle,\r\n  setImagesData,\r\n  uploadCurrentWorkComments,\r\n} from \"../../../Redux/WorksReducer\";\r\n\r\nlet WorkContainer = (props) => {\r\n  // get data from url\r\n  let workName = props.match.params.workName;\r\n  props.setWorkName(workName);\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const getLastWorkData = async () => {\r\n      if (props.currentWorkName === workName) {\r\n        // get all works data\r\n        const worksData = await request(`/api/works/getWork/${props.currentWorkName}`, \"GET\", null);\r\n        props.setWork(worksData);\r\n        props.setWorkId(worksData[0]._id);\r\n        // get extended current work data\r\n        if (props.currentWorkId !== undefined && props.currentWorkId === worksData[0]._id) {\r\n          const worksColors = await request(\r\n            `/api/works/colors/${props.currentWorkId}`,\r\n            \"GET\",\r\n            null\r\n          );\r\n          props.setColor(worksColors);\r\n          const worksStyles = await request(\r\n            `/api/works/textStyles/${props.currentWorkId}`,\r\n            \"GET\",\r\n            null\r\n          );\r\n          props.setStyle(worksStyles);\r\n          const whatIDid = await request(`/api/works/didPoint/${props.currentWorkId}`, \"GET\", null);\r\n          props.setWhatIDid(whatIDid);\r\n          const images = await request(`/api/works/getPhotos/${props.currentWorkId}`, \"GET\", null);\r\n          props.setImagesData(images);\r\n          const workCommentsResponse = await request(\r\n            `/api/works/getWorkComments/${props.currentWorkId}`,\r\n            \"GET\",\r\n            null\r\n          );\r\n          props.uploadCurrentWorkComments(workCommentsResponse);\r\n        }\r\n      }\r\n    };\r\n    getLastWorkData();\r\n  }, [props.currentWorkId, props.currentWorkName]);\r\n\r\n  return <Work works={props.works} images={props.images} loading={loading} />;\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    works: state.works.works,\r\n    images: state.works.images,\r\n    currentWorkId: state.works.currentWorkId,\r\n    currentWorkName: state.works.currentWorkName,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setColor,\r\n    setWhatIDid,\r\n    setWork,\r\n    setWorkId,\r\n    setWorkName,\r\n    setStyle,\r\n    setImagesData,\r\n    uploadCurrentWorkComments,\r\n  }),\r\n  withRouter\r\n)(WorkContainer);\r\n"]},"metadata":{},"sourceType":"module"}