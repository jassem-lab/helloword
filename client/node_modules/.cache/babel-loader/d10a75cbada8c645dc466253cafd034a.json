{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\src\\\\components\\\\PortfolioPage\\\\PortfolioPageContainer.js\";\nimport React, { useEffect } from \"react\";\nimport PortfolioPage from \"./PortfolioPage\";\nimport { connect } from \"react-redux\";\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { setColor, setWhatIDid, setWork, setWorkId, setStyle, setImagesData } from \"../../Redux/WorksReducer\";\n\nlet PortfolioPageContainer = props => {\n  const {\n    loading,\n    request\n  } = useHttp();\n  useEffect(() => {\n    const getLastWorkData = async () => {\n      const worksData = await request(\"/api/works\", \"GET\", null);\n      const worksDataReverse = worksData.reverse();\n      props.setWork(worksDataReverse);\n\n      if (worksData.length !== 0) {\n        const images = await request(\"/api/works/getMainPhotos/workPhoto\", \"GET\", null);\n        props.setImagesData(images);\n      }\n    };\n\n    getLastWorkData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PortfolioPage, {\n    works: props.works,\n    images: props.images,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nlet mapStateToProps = state => {\n  return {\n    works: state.works.works,\n    currentWorkId: state.works.currentWorkId,\n    images: state.works.images\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setColor,\n  setWhatIDid,\n  setWork,\n  setWorkId,\n  setStyle,\n  setImagesData\n})(PortfolioPageContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/PortfolioPage/PortfolioPageContainer.js"],"names":["React","useEffect","PortfolioPage","connect","useHttp","setColor","setWhatIDid","setWork","setWorkId","setStyle","setImagesData","PortfolioPageContainer","props","loading","request","getLastWorkData","worksData","worksDataReverse","reverse","length","images","works","mapStateToProps","state","currentWorkId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,aANF,QAOO,0BAPP;;AASA,IAAIC,sBAAsB,GAAIC,KAAD,IAAW;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBV,OAAO,EAApC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAG,YAAY;AAClC,YAAMC,SAAS,GAAG,MAAMF,OAAO,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAtB,CAA/B;AACA,YAAMG,gBAAgB,GAAGD,SAAS,CAACE,OAAV,EAAzB;AACAN,MAAAA,KAAK,CAACL,OAAN,CAAcU,gBAAd;;AACA,UAAID,SAAS,CAACG,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAMC,MAAM,GAAG,MAAMN,OAAO,CAAC,oCAAD,EAAuC,KAAvC,EAA8C,IAA9C,CAA5B;AACAF,QAAAA,KAAK,CAACF,aAAN,CAAoBU,MAApB;AACD;AACF,KARD;;AASAL,IAAAA,eAAe;AAChB,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEH,KAAK,CAACS,KAA5B;AAAmC,IAAA,MAAM,EAAET,KAAK,CAACQ,MAAjD;AAAyD,IAAA,OAAO,EAAEP,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAnBD;;AAqBA,IAAIS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYA,KADd;AAELG,IAAAA,aAAa,EAAED,KAAK,CAACF,KAAN,CAAYG,aAFtB;AAGLJ,IAAAA,MAAM,EAAEG,KAAK,CAACF,KAAN,CAAYD;AAHf,GAAP;AAKD,CAND;;AAQA,eAAejB,OAAO,CAACmB,eAAD,EAAkB;AACtCjB,EAAAA,QADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA,OAHsC;AAItCC,EAAAA,SAJsC;AAKtCC,EAAAA,QALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZC,sBAPY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PortfolioPage from \"./PortfolioPage\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport {\r\n  setColor,\r\n  setWhatIDid,\r\n  setWork,\r\n  setWorkId,\r\n  setStyle,\r\n  setImagesData,\r\n} from \"../../Redux/WorksReducer\";\r\n\r\nlet PortfolioPageContainer = (props) => {\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const getLastWorkData = async () => {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      const worksDataReverse = worksData.reverse();\r\n      props.setWork(worksDataReverse);\r\n      if (worksData.length !== 0) {\r\n        const images = await request(\"/api/works/getMainPhotos/workPhoto\", \"GET\", null);\r\n        props.setImagesData(images);\r\n      }\r\n    };\r\n    getLastWorkData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <PortfolioPage works={props.works} images={props.images} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    works: state.works.works,\r\n    currentWorkId: state.works.currentWorkId,\r\n    images: state.works.images,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setColor,\r\n  setWhatIDid,\r\n  setWork,\r\n  setWorkId,\r\n  setStyle,\r\n  setImagesData,\r\n})(PortfolioPageContainer);\r\n"]},"metadata":{},"sourceType":"module"}