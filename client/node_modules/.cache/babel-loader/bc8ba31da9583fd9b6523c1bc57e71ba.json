{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\hhh\\\\client\\\\src\\\\components\\\\mainPage\\\\Components\\\\FeedbackForm\\\\FeedbackContainer.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHttp } from \"../../../../hooks/http.hook\";\nimport { setError } from \"../../../../Redux/FeedbackReducer\";\nimport Feedback from \"./Feedback\";\n\nlet FeedbackContainer = props => {\n  const {\n    loading,\n    error,\n    request\n  } = useHttp();\n\n  const sendFeedback = async formData => {\n    try {\n      await request(\"/api/feedback/sendFeedback\", \"POST\", { ...formData\n      });\n      formData.name = null;\n      formData.number = null;\n      formData.email = null;\n      formData.message = null;\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    props.setError(error);\n  }, [error]);\n  return /*#__PURE__*/React.createElement(Feedback, {\n    status: props.status,\n    error: props.error,\n    sendFeedback: sendFeedback,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    status: state.feedback.status,\n    error: state.feedback.error,\n    token: state.admin.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setError\n})(FeedbackContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/components/mainPage/Components/FeedbackForm/FeedbackContainer.js"],"names":["React","useEffect","connect","useHttp","setError","Feedback","FeedbackContainer","props","loading","error","request","sendFeedback","formData","name","number","email","message","e","status","mapStateToProps","state","feedback","token","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAIC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BP,OAAO,EAA3C;;AAEA,QAAMQ,YAAY,GAAG,MAAOC,QAAP,IAAoB;AACvC,QAAI;AACF,YAAMF,OAAO,CACX,4BADW,EAEX,MAFW,EAGX,EAAE,GAAGE;AAAL,OAHW,CAAb;AAKAA,MAAAA,QAAQ,CAACC,IAAT,GAAgB,IAAhB;AACAD,MAAAA,QAAQ,CAACE,MAAT,GAAkB,IAAlB;AACAF,MAAAA,QAAQ,CAACG,KAAT,GAAiB,IAAjB;AACAH,MAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAnB;AACD,KAVD,CAUE,OAAOC,CAAP,EAAU,CAAE;AACf,GAZD;;AAcAhB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACH,QAAN,CAAeK,KAAf;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEF,KAAK,CAACW,MADhB;AAEE,IAAA,KAAK,EAAEX,KAAK,CAACE,KAFf;AAGE,IAAA,YAAY,EAAEE,YAHhB;AAIE,IAAA,OAAO,EAAEH,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA7BD;;AA+BA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACC,QAAN,CAAeH,MADlB;AAELT,IAAAA,KAAK,EAAEW,KAAK,CAACC,QAAN,CAAeZ,KAFjB;AAGLa,IAAAA,KAAK,EAAEF,KAAK,CAACG,KAAN,CAAYD;AAHd,GAAP;AAKD,CAND;;AAQA,eAAepB,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,iBAAvC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\nimport { setError } from \"../../../../Redux/FeedbackReducer\";\r\nimport Feedback from \"./Feedback\";\r\n\r\nlet FeedbackContainer = (props) => {\r\n  const { loading, error, request } = useHttp();\r\n\r\n  const sendFeedback = async (formData) => { \r\n    try {\r\n      await request(\r\n        \"/api/feedback/sendFeedback\",\r\n        \"POST\",\r\n        { ...formData },\r\n      );\r\n      formData.name = null;\r\n      formData.number = null;\r\n      formData.email = null;\r\n      formData.message = null;\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.setError(error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <Feedback\r\n      status={props.status}\r\n      error={props.error}\r\n      sendFeedback={sendFeedback}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    status: state.feedback.status,\r\n    error: state.feedback.error,\r\n    token: state.admin.token,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setError })(FeedbackContainer);\r\n"]},"metadata":{},"sourceType":"module"}