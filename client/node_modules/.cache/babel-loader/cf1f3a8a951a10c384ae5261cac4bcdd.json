{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// Import React FilePond\nimport{FilePond,registerPlugin}from\"react-filepond\";// Import FilePond styles\nimport\"filepond/dist/filepond.min.css\";import FilePondPluginImageExifOrientation from\"filepond-plugin-image-exif-orientation\";import FilePondPluginImagePreview from\"filepond-plugin-image-preview\";import FilePondPluginFileEncode from\"filepond-plugin-file-encode\";import FilePondPluginImageResize from\"filepond-plugin-image-resize\";import\"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation,FilePondPluginImagePreview,FilePondPluginFileEncode,FilePondPluginImageResize);var FilePondWorks=function FilePondWorks(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),files=_useState2[0],setFiles=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var inputOnChange=function inputOnChange(e){setInput(e.currentTarget.value);};var currentId=props.currentWorkId;return/*#__PURE__*/React.createElement(\"div\",{className:\"filePondWorks wrapper\"},/*#__PURE__*/React.createElement(\"form\",{action:\"/api/works/addPhoto/\"+currentId,method:\"POST\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"editImageDataTitle\"},\"Add image to work\"),/*#__PURE__*/React.createElement(\"div\",{className:\"editImgData\"},/*#__PURE__*/React.createElement(\"div\",{className:\"editInput imgInput\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"editInput imgInput\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"descr\"},\"Description: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"descr\"})),props.allWorks!==undefined||props.allWorks!==null?/*#__PURE__*/React.createElement(\"div\",{className:\"editInput imgInput hideInput\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"owner\"},\"Owner: \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"owner\",onChange:inputOnChange,value:input})):null,/*#__PURE__*/React.createElement(\"div\",{className:\"editFontStyle\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"type\"},\"Type: \"),/*#__PURE__*/React.createElement(\"select\",{name:\"type\",id:\"\"},/*#__PURE__*/React.createElement(\"option\",{value:\"workPhoto\"},\"workPhoto\"),/*#__PURE__*/React.createElement(\"option\",{value:\"workPreview\"},\"workPreview\"),/*#__PURE__*/React.createElement(\"option\",{value:\"workBackground\"},\"workBackground\"),/*#__PURE__*/React.createElement(\"option\",{value:\"desktopImg\"},\"desktopImg\"),/*#__PURE__*/React.createElement(\"option\",{value:\"mobileImg\"},\"mobileImg\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"filePondArea\"},/*#__PURE__*/React.createElement(FilePond,{setOptions:{stylePanelAspectRatio:150/100,imageResizeTargetWidth:100,imageResizeTargetHight:150},files:files,onupdatefiles:setFiles,allowMultiple:false,maxFiles:1,name:\"img\",labelIdle:\"Drag & Drop your files or <span class=\\\"filepond--label-action\\\">Browse</span>\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"buttonPage\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Save\"))),/*#__PURE__*/React.createElement(\"div\",null,props.loading?\"loading...\":null)));};export default FilePondWorks;","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/adminPanel/AdminPanelComponents/adminWorkSpace/NewWorkComponents/FilePondWorks.js"],"names":["React","useState","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileEncode","FilePondPluginImageResize","FilePondWorks","props","files","setFiles","input","setInput","inputOnChange","e","currentTarget","value","currentId","currentWorkId","allWorks","undefined","stylePanelAspectRatio","imageResizeTargetWidth","imageResizeTargetHight","loading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\n\r\n// Import FilePond styles\r\nimport \"filepond/dist/filepond.min.css\";\r\n\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\n\r\n// Register the plugins\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst FilePondWorks = (props) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [input, setInput] = useState();\r\n  const inputOnChange = (e) => {\r\n    setInput(e.currentTarget.value);\r\n  };\r\n  const currentId = props.currentWorkId;\r\n  return (\r\n    <div className=\"filePondWorks wrapper\">\r\n      <form action={\"/api/works/addPhoto/\" + currentId} method=\"POST\">\r\n        <h2 className=\"editImageDataTitle\">Add image to work</h2>\r\n        <div className=\"editImgData\">\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"name\">Name: </label>\r\n            <input type=\"text\" name=\"name\" />\r\n          </div>\r\n          <div className=\"editInput imgInput\">\r\n            <label htmlFor=\"descr\">Description: </label>\r\n            <input type=\"text\" name=\"descr\" />\r\n          </div>\r\n          {props.allWorks !== undefined || props.allWorks !== null ? (\r\n            <div className=\"editInput imgInput hideInput\">\r\n              <label htmlFor=\"owner\">Owner: </label>\r\n              <input type=\"text\" name=\"owner\" onChange={inputOnChange} value={input} />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"editFontStyle\">\r\n            <label htmlFor=\"type\">Type: </label>\r\n            <select name=\"type\" id=\"\">\r\n              <option value=\"workPhoto\">workPhoto</option>\r\n              <option value=\"workPreview\">workPreview</option>\r\n              <option value=\"workBackground\">workBackground</option>\r\n              <option value=\"desktopImg\">desktopImg</option>\r\n              <option value=\"mobileImg\">mobileImg</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"filePondArea\">\r\n          <FilePond\r\n            setOptions={{\r\n              stylePanelAspectRatio: 150 / 100,\r\n              imageResizeTargetWidth: 100,\r\n              imageResizeTargetHight: 150,\r\n            }}\r\n            files={files}\r\n            onupdatefiles={setFiles}\r\n            allowMultiple={false}\r\n            maxFiles={1}\r\n            name=\"img\"\r\n            labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n          />\r\n          <div className=\"buttonPage\">\r\n            <button type=\"submit\">Save</button>\r\n          </div>\r\n        </div>\r\n        <div>{props.loading ? \"loading...\" : null}</div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilePondWorks;\r\n"]},"metadata":{},"sourceType":"module"}