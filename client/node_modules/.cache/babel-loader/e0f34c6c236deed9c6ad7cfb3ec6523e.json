{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Navbar from\"./Navbar\";import{connect}from\"react-redux\";import{setMenuState}from\"../../Redux/AdminReducer\";var NavbarContainer=function NavbarContainer(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),opacity=_useState2[0],setOpacity=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),toggle=_useState4[0],setToggle=_useState4[1];var onToggleClick=function onToggleClick(){if(!toggle){setToggle(true);props.setMenuState(true);}else{setToggle(false);props.setMenuState(false);}};var closeMenu=function closeMenu(){setToggle(false);};useEffect(function(){var onScrollFunction=function onScrollFunction(){if(window.pageYOffset>0){setOpacity(true);}else{setOpacity(false);}};window.addEventListener(\"scroll\",onScrollFunction);},[]);return/*#__PURE__*/React.createElement(Navbar,{validation:props.validation,opacity:opacity,toggle:toggle,onToggleClick:onToggleClick,closeMenu:closeMenu});};var mapStateToProps=function mapStateToProps(state){return{validation:state.admin.validation};};export default connect(mapStateToProps,{setMenuState:setMenuState})(NavbarContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/Header/NavbarContainer.jsx"],"names":["React","useEffect","useState","Navbar","connect","setMenuState","NavbarContainer","props","opacity","setOpacity","toggle","setToggle","onToggleClick","closeMenu","onScrollFunction","window","pageYOffset","addEventListener","validation","mapStateToProps","state","admin"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAT,KAA6B,0BAA7B,CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,eACHL,QAAQ,CAAC,KAAD,CADL,wCAC1BM,OAD0B,eACjBC,UADiB,8BAELP,QAAQ,CAAC,KAAD,CAFH,yCAE1BQ,MAF0B,eAElBC,SAFkB,eAI/B,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAI,CAACF,MAAL,CAAa,CACXC,SAAS,CAAC,IAAD,CAAT,CACAJ,KAAK,CAACF,YAAN,CAAmB,IAAnB,EACD,CAHD,IAGO,CACLM,SAAS,CAAC,KAAD,CAAT,CACAJ,KAAK,CAACF,YAAN,CAAmB,KAAnB,EACD,CACF,CARD,CAUA,GAAMQ,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBF,SAAS,CAAC,KAAD,CAAT,CACD,CAFD,CAGAV,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIC,MAAM,CAACC,WAAP,CAAqB,CAAzB,CAA4B,CAC1BP,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,IAEO,CACLA,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAND,CAOAM,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,gBAAlC,EACD,CATQ,CASN,EATM,CAAT,CAUA,mBACE,oBAAC,MAAD,EACE,UAAU,CAAEP,KAAK,CAACW,UADpB,CAEE,OAAO,CAAEV,OAFX,CAGE,MAAM,CAAEE,MAHV,CAIE,aAAa,CAAEE,aAJjB,CAKE,SAAS,CAAEC,SALb,EADF,CASD,CApCD,CAsCA,GAAIM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACLF,UAAU,CAAEE,KAAK,CAACC,KAAN,CAAYH,UADnB,CAAP,CAGD,CAJD,CAMA,cAAed,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEd,YAAY,CAAZA,YAAF,CAAlB,CAAP,CAA2CC,eAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMenuState } from \"../../Redux/AdminReducer\";\r\n\r\nlet NavbarContainer = (props) => {\r\n  let [opacity, setOpacity] = useState(false);\r\n  let [toggle, setToggle] = useState(false);\r\n\r\n  const onToggleClick = () => {\r\n    if (!toggle) {\r\n      setToggle(true);\r\n      props.setMenuState(true);\r\n    } else {\r\n      setToggle(false);\r\n      props.setMenuState(false);\r\n    }\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setToggle(false);\r\n  };\r\n  useEffect(() => {\r\n    const onScrollFunction = () => {\r\n      if (window.pageYOffset > 0) {\r\n        setOpacity(true);\r\n      } else {\r\n        setOpacity(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", onScrollFunction);\r\n  }, []);\r\n  return (\r\n    <Navbar\r\n      validation={props.validation}\r\n      opacity={opacity}\r\n      toggle={toggle}\r\n      onToggleClick={onToggleClick}\r\n      closeMenu={closeMenu}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    validation: state.admin.validation,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setMenuState })(NavbarContainer);\r\n"]},"metadata":{},"sourceType":"module"}