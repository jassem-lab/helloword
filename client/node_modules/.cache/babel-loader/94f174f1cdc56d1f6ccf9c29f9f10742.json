{"ast":null,"code":"import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers[\"Content-Type\"] = \"application/json\";\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something wrong\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []); // const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error\n  };\n};","map":{"version":3,"sources":["C:/Users/jassem/Desktop/hhh/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","ok","Error","message","e"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACpFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,UAAIM,IAAJ,EAAU;AACRA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACD;;AACD,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA;AAAhB,OAAN,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,iBAA1B,CAAN;AACD;;AACDhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOY,IAAP;AACD,KAdD,CAcE,OAAOK,CAAP,EAAU;AACVjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACe,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACD;AACF,GArB0B,EAqBxB,EArBwB,CAA3B,CAJ2B,CA2B3B;;AACA,SAAO;AAAElB,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA;AAApB,GAAP;AACD,CA7BM","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n    setLoading(true);\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body);\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n      }\r\n      const response = await fetch(url, { method, body, headers });\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Something wrong\");\r\n      }\r\n      setLoading(false);\r\n\r\n      return data;\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  // const clearError = () => setError(null);\r\n  return { loading, request, error };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}