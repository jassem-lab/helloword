{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";import LatestWorks from\"./LatestWorks\";import{connect}from\"react-redux\";import{useHttp}from\"../../../../hooks/http.hook\";import{setWork,setImagesData}from\"../../../../Redux/WorksReducer\";var LatestWorksContainer=function LatestWorksContainer(props){var _useHttp=useHttp(),loading=_useHttp.loading,request=_useHttp.request;useEffect(function(){var getLastWorkData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var worksData,images;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return request(\"/api/works\",\"GET\",null);case 2:worksData=_context.sent;props.setWork(worksData);if(!(worksData.length!==0)){_context.next=9;break;}_context.next=7;return request(\"/api/works/getMainPhotos/workPreview\",\"GET\",null);case 7:images=_context.sent;props.setImagesData(images);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getLastWorkData(){return _ref.apply(this,arguments);};}();getLastWorkData();},[]);return/*#__PURE__*/React.createElement(LatestWorks,{works:props.works,images:props.images,params:props.params,loading:loading});};var mapStateToProps=function mapStateToProps(state){return{works:state.works.works,images:state.works.images};};export default connect(mapStateToProps,{setWork:setWork,setImagesData:setImagesData})(LatestWorksContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/mainPage/Components/LatestWorks/LatestWorksContainer.js"],"names":["React","useEffect","LatestWorks","connect","useHttp","setWork","setImagesData","LatestWorksContainer","props","loading","request","getLastWorkData","worksData","length","images","works","params","mapStateToProps","state"],"mappings":"qVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,6BAAxB,CACA,OAASC,OAAT,CAAkBC,aAAlB,KAAuC,gCAAvC,CAEA,GAAIC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,cACPJ,OAAO,EADA,CAC5BK,OAD4B,UAC5BA,OAD4B,CACnBC,OADmB,UACnBA,OADmB,CAEpCT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,eAAe,0FAAG,8KACED,CAAAA,OAAO,CAAC,YAAD,CAAe,KAAf,CAAsB,IAAtB,CADT,QAChBE,SADgB,eAEtBJ,KAAK,CAACH,OAAN,CAAcO,SAAd,EAFsB,KAGlBA,SAAS,CAACC,MAAV,GAAqB,CAHH,gDAICH,CAAAA,OAAO,CAAC,sCAAD,CAAyC,KAAzC,CAAgD,IAAhD,CAJR,QAIdI,MAJc,eAKpBN,KAAK,CAACF,aAAN,CAAoBQ,MAApB,EALoB,sDAAH,kBAAfH,CAAAA,eAAe,0CAArB,CAQAA,eAAe,GAChB,CAVQ,CAUN,EAVM,CAAT,CAWA,mBACE,oBAAC,WAAD,EACE,KAAK,CAAEH,KAAK,CAACO,KADf,CAEE,MAAM,CAAEP,KAAK,CAACM,MAFhB,CAGE,MAAM,CAAEN,KAAK,CAACQ,MAHhB,CAIE,OAAO,CAAEP,OAJX,EADF,CAQD,CArBD,CAuBA,GAAIQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACLH,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYA,KADd,CAELD,MAAM,CAAEI,KAAK,CAACH,KAAN,CAAYD,MAFf,CAAP,CAID,CALD,CAOA,cAAeX,CAAAA,OAAO,CAACc,eAAD,CAAkB,CAAEZ,OAAO,CAAPA,OAAF,CAAWC,aAAa,CAAbA,aAAX,CAAlB,CAAP,CAAqDC,oBAArD,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport LatestWorks from \"./LatestWorks\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\nimport { setWork, setImagesData } from \"../../../../Redux/WorksReducer\";\r\n\r\nlet LatestWorksContainer = (props) => {\r\n  const { loading, request } = useHttp();\r\n  useEffect(() => {\r\n    const getLastWorkData = async () => {\r\n      const worksData = await request(\"/api/works\", \"GET\", null);\r\n      props.setWork(worksData);\r\n      if (worksData.length !== 0) {\r\n        const images = await request(\"/api/works/getMainPhotos/workPreview\", \"GET\", null);\r\n        props.setImagesData(images);\r\n      }\r\n    };\r\n    getLastWorkData();\r\n  }, []);\r\n  return (\r\n    <LatestWorks\r\n      works={props.works}\r\n      images={props.images}\r\n      params={props.params}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    works: state.works.works,\r\n    images: state.works.images,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setWork, setImagesData })(LatestWorksContainer);\r\n"]},"metadata":{},"sourceType":"module"}