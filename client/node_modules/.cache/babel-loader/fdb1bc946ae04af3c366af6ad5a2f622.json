{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\src\\\\components\\\\adminPanel\\\\AdminPanelComponents\\\\adminFeedbacksSpace\\\\WorkSpaceFeedbacksContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { setFeedbacks } from \"../../../../Redux/FeedbackReducer\";\nimport { useHttp } from \"../../../../hooks/http.hook\";\nimport FeedbacksMenu from \"./FeedbacksMenu\";\nimport \"../../Admin.css\";\n\nconst WorkSpaceFeedbacksContainer = props => {\n  const {\n    request\n  } = useHttp();\n  useEffect(() => {\n    const feedbacksA = async () => {\n      const response = await request(`/api/feedback`, \"GET\", null);\n      props.setFeedbacks(response);\n    };\n\n    feedbacksA();\n  }, []);\n  const FeedbacksData = props.feedbacks.map(feedback => {\n    return /*#__PURE__*/React.createElement(FeedbacksMenu, {\n      key: feedback._id,\n      name: feedback.name,\n      number: feedback.number,\n      email: feedback.email,\n      message: feedback.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedbacks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Feedbacks\"), FeedbacksData);\n};\n\nlet mapStateToProps = state => {\n  return {\n    feedbacks: state.feedback.Messages\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setFeedbacks\n})(WorkSpaceFeedbacksContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/adminPanel/AdminPanelComponents/adminFeedbacksSpace/WorkSpaceFeedbacksContainer.jsx"],"names":["React","connect","useEffect","setFeedbacks","useHttp","FeedbacksMenu","WorkSpaceFeedbacksContainer","props","request","feedbacksA","response","FeedbacksData","feedbacks","map","feedback","_id","name","number","email","message","mapStateToProps","state","Messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,iBAAP;;AAEA,MAAMC,2BAA2B,GAAIC,KAAD,IAAW;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,OAAO,EAA3B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMF,OAAO,CAAE,eAAF,EAAkB,KAAlB,EAAyB,IAAzB,CAA9B;AACAD,MAAAA,KAAK,CAACJ,YAAN,CAAmBO,QAAnB;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;AAQA,QAAME,aAAa,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,GAAhB,CAAqBC,QAAD,IAAc;AACtD,wBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACC,GADhB;AAEE,MAAA,IAAI,EAAED,QAAQ,CAACE,IAFjB;AAGE,MAAA,MAAM,EAAEF,QAAQ,CAACG,MAHnB;AAIE,MAAA,KAAK,EAAEH,QAAQ,CAACI,KAJlB;AAKE,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVqB,CAAtB;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGR,aAFH,CADF;AAMD,CA3BD;;AA6BA,IAAIS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLT,IAAAA,SAAS,EAAES,KAAK,CAACP,QAAN,CAAeQ;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,2BAA3C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setFeedbacks } from \"../../../../Redux/FeedbackReducer\";\r\nimport { useHttp } from \"../../../../hooks/http.hook\";\r\nimport FeedbacksMenu from \"./FeedbacksMenu\";\r\nimport \"../../Admin.css\";\r\n\r\nconst WorkSpaceFeedbacksContainer = (props) => {\r\n  const { request } = useHttp();\r\n  useEffect(() => {\r\n    const feedbacksA = async () => {\r\n      const response = await request(`/api/feedback`, \"GET\", null);\r\n      props.setFeedbacks(response);\r\n    };\r\n    feedbacksA();\r\n  }, []);\r\n\r\n  const FeedbacksData = props.feedbacks.map((feedback) => {\r\n    return (\r\n      <FeedbacksMenu\r\n        key={feedback._id}\r\n        name={feedback.name}\r\n        number={feedback.number}\r\n        email={feedback.email}\r\n        message={feedback.message}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"feedbacks\">\r\n      <h1>Feedbacks</h1>\r\n      {FeedbacksData}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    feedbacks: state.feedback.Messages,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFeedbacks })(WorkSpaceFeedbacksContainer);\r\n"]},"metadata":{},"sourceType":"module"}