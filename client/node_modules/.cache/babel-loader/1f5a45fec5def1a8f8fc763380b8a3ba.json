{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jassem\\\\Desktop\\\\my_portfolio\\\\client\\\\src\\\\components\\\\adminPanel\\\\AdminPanelComponents\\\\AdminPanelContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHttp } from \"../../../hooks/http.hook\";\nimport AdminPanel from \"../AdminPanel\";\nimport { login, setError } from \"../../../Redux/AdminReducer\";\n\nlet AdminPanelContainer = props => {\n  console.log(props);\n  const {\n    request\n  } = useHttp();\n\n  const registerHandler = async formData => {\n    try {\n      await request(\"/api/auth/register\", \"POST\", { ...formData\n      });\n      formData.email = null;\n      formData.password = null;\n    } catch (e) {}\n  };\n\n  const loginHandler = async formData => {\n    try {\n      const data = await request(\"/api/auth/login\", \"POST\", { ...formData\n      });\n      props.login(data.token, data.userId);\n      formData.email = null;\n      formData.password = null;\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/React.createElement(AdminPanel, {\n    validation: props.validation,\n    error: props.error,\n    registerHandler: registerHandler,\n    loginHandler: loginHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    validation: state.admin.validation,\n    error: state.admin.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  setError\n})(AdminPanelContainer);","map":{"version":3,"sources":["C:/Users/jassem/Desktop/my_portfolio/client/src/components/adminPanel/AdminPanelComponents/AdminPanelContainer.js"],"names":["React","connect","useHttp","AdminPanel","login","setError","AdminPanelContainer","props","console","log","request","registerHandler","formData","email","password","e","loginHandler","data","token","userId","validation","error","mapStateToProps","state","admin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,6BAAhC;;AAEA,IAAIC,mBAAmB,GAAIC,KAAD,IAAW;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcR,OAAO,EAA3B;;AAEA,QAAMS,eAAe,GAAG,MAAOC,QAAP,IAAoB;AAC1C,QAAI;AACF,YAAMF,OAAO,CAAC,oBAAD,EAAuB,MAAvB,EAA+B,EAAE,GAAGE;AAAL,OAA/B,CAAb;AACAA,MAAAA,QAAQ,CAACC,KAAT,GAAiB,IAAjB;AACAD,MAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU,CAAE;AACf,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAOJ,QAAP,IAAoB;AACvC,QAAI;AACF,YAAMK,IAAI,GAAG,MAAMP,OAAO,CAAC,iBAAD,EAAoB,MAApB,EAA4B,EAAE,GAAGE;AAAL,OAA5B,CAA1B;AACAL,MAAAA,KAAK,CAACH,KAAN,CAAYa,IAAI,CAACC,KAAjB,EAAwBD,IAAI,CAACE,MAA7B;AACAP,MAAAA,QAAQ,CAACC,KAAT,GAAiB,IAAjB;AACAD,MAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;AACD,KALD,CAKE,OAAOC,CAAP,EAAU,CAAE;AACf,GAPD;;AAWA,sBACE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAER,KAAK,CAACa,UADpB;AAEE,IAAA,KAAK,EAAEb,KAAK,CAACc,KAFf;AAGE,IAAA,eAAe,EAAEV,eAHnB;AAIE,IAAA,YAAY,EAAEK,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA/BD;;AAkCA,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,UAAU,EAAEG,KAAK,CAACC,KAAN,CAAYJ,UADnB;AAELC,IAAAA,KAAK,EAAEE,KAAK,CAACC,KAAN,CAAYH;AAFd,GAAP;AAID,CALD;;AAOA,eAAepB,OAAO,CAACqB,eAAD,EAAkB;AAAElB,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAlB,CAAP,CAA8CC,mBAA9C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHttp } from \"../../../hooks/http.hook\";\r\nimport AdminPanel from \"../AdminPanel\";\r\nimport { login, setError } from \"../../../Redux/AdminReducer\";\r\n\r\nlet AdminPanelContainer = (props) => {\r\n  console.log(props)\r\n  const { request } = useHttp();\r\n\r\n  const registerHandler = async (formData) => {\r\n    try {\r\n      await request(\"/api/auth/register\", \"POST\", { ...formData });\r\n      formData.email = null;\r\n      formData.password = null;\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async (formData) => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...formData });\r\n      props.login(data.token, data.userId);\r\n      formData.email = null;\r\n      formData.password = null;\r\n    } catch (e) {}\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <AdminPanel\r\n      validation={props.validation}\r\n      error={props.error}\r\n      registerHandler={registerHandler}\r\n      loginHandler={loginHandler}\r\n    />\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    validation: state.admin.validation,\r\n    error: state.admin.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login, setError })(AdminPanelContainer);\r\n"]},"metadata":{},"sourceType":"module"}